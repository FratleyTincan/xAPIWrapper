{"version":3,"sources":["../lib/cryptojs_v3.1.2.js","../temp/xapiwrapper.js","../lib/utf8-encoding.js","../temp/activitytypes.js","../temp/verbs.js","../temp/xapistatement.js","../temp/xapi-util.js","../temp/xapi-launch.js"],"names":["CryptoJS","Math","undefined","C","C_lib","lib","Base","F","extend","overrides","prototype","this","subtype","mixIn","hasOwnProperty","init","$super","apply","arguments","create","instance","properties","propertyName","toString","clone","WordArray","words","sigBytes","length","encoder","Hex","stringify","concat","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","i","thatByte","push","ceil","call","slice","random","nBytes","C_enc","enc","hexChars","bite","join","parse","hexStr","hexStrLength","parseInt","substr","Latin1","latin1Chars","String","fromCharCode","latin1Str","latin1StrLength","charCodeAt","Utf8","decodeURIComponent","escape","e","Error","utf8Str","unescape","encodeURIComponent","BufferedBlockAlgorithm","Base64","map","_map","base64Chars","triplet","j","charAt","paddingChar","base64Str","base64StrLength","paddingIndex","indexOf","bits1","bits2","reset","_data","_nDataBytes","_append","data","_process","doFlush","dataWords","dataSigBytes","blockSize","nBlocksReady","nWordsReady","max","_minBufferSize","nBytesReady","min","offset","_doProcessBlock","processedWords","splice","Hasher","cfg","_doReset","update","messageUpdate","finalize","_doFinalize","_createHelper","hasher","message","_createHmacHelper","key","C_algo","HMAC","algo","W","SHA1","_hash","M","H","a","b","c","d","n","t","nBitsTotal","nBitsLeft","floor","HmacSHA1","h","s","f","g","q","m","r","k","l","u","toBase64","text","encode","toSHA1","Crypto","util","bytesToHex","asBytes","toSHA256","content","Object","SHA256","i8a","Uint8Array","isDate","date","Date","isNaN","valueOf","ADL","XAPIWrapper","log","getByteLen","normal_val","byteLen","Number","NaN","sqrt","pow","p","HmacSHA256","_hasher","_oKey","_iKey","root","TextDecoder","TextEncoder","encoding","string","octets","codePoint","codePointAt","bits","decode","octet","bytesNeeded","fromCodePoint","activityTypes","assessment","attempt","course","file","interaction","lesson","link","media","meeting","module","objective","performance","profile","question","simulation","verbs","abandoned","id","display","en-US","answered","de-DE","fr-FR","es-ES","ar-AR","asked","attempted","attended","commented","completed","exited","experienced","failed","imported","initialized","interacted","launched","mastered","passed","preferred","progressed","registered","responded","resumed","satisfied","scored","shared","suspended","terminated","voided","waived","toISOString","pad","number","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","debug","Config","conf","endpoint","config","verifyxapiversion","getbase","url","parseUrl","protocol","host","href","parts","split","updateAuth","obj","username","password","auth","lrs","getLRSObject","user","base","withCredentials","strictCallbacks","testConfig","XHR_request","status","lrsabout","JSON","response","versionOK","idx","version","xapiVersion","searchParams","format","hash","tohash","changeConfig","mergeRecursive","console","obj1","obj2","constructor","qsVars","prop","lrsProps","parseQueryString","keys","extended","pairs","pair","ii","parsed","location","search","delay","xhr","XMLHttpRequest","ruuid","open","send","prepareStatement","stmt","actor","grouping","registration","activity_platform","context","contextActivities","platform","defaultEncoding","sendStatement","callback","attachments","payload","extraHeaders","buildMultipartPost","resp","stringToArrayBuffer","buffer","stringFromArrayBuffer","statement","type","usageType","description","contentType","value","byteLength","sha2","blobParts","boundary","substring","CRLF","header","attachmentHeader","Blob","sendStatements","stmtArray","getStatements","searchparams","more","urlparams","Array","res","getActivities","activityid","replace","result","sendState","agent","stateid","stateval","matchHash","noneMatchHash","headers","If-Match","formatHash","If-None-Match","method","getState","since","deleteState","sendActivityProfile","profileid","profileval","getActivityProfile","deleteActivityProfile","getAgents","sendAgentProfile","getAgentProfile","deleteAgentProfile","isNode","Boolean","document","require","createElement","ie_request","newUrl","formData","qsIndex","headerName","_getobj","path","part","test","async","crossDomain","responseText","responseJSON","readyState","onreadystatechange","onerror","error","onload","setRequestHeader","name","http","includes","options","parsedUrl","req","request","setEncoding","statusCode","on","bind","end","dateFromISOString","isostr","match","RegExp","setMonth","setDate","setHours","setMinutes","setSeconds","setMilliseconds","getTimezoneOffset","time","dateToReturn","setTime","callbackargs","ignore404","ieModeRequest","until","finished","xDomainRequest","ieXDomain","urlparts","toLowerCase","Content-Type","hostname","port","windowsVersionCheck","XDomainRequest","responseType","requestComplete","notFoundOk","warning","ex","xhrRequestOnError","body","XAPIStatement","verb","object","Agent","objectType","Group","Verb","StatementRef","SubStatement","Activity","generateId","isValid","generateRegistration","addParentActivity","activity","addGroupingActivity","addOtherContextActivity","identifier","mbox","mbox_sha1sum","openid","account","homePage","member","members","act","definition","stored","authority","onBrowser","window","getObjDefName","o","xapiutil","getLangVal","getSubStatementDisplay","getActorId","getVerbDisplay","getObjectId","getQueryVariable","variable","vars","cb_wrap","cb","args","setTimeout","callerArgs","observeForNewLinks","target","MutationObserver","mutations","forEach","mutation","addedNodes","HTMLAnchorElement","setupCourseLinks","observe","attributes","childList","subtree","_nodes","query","courseLink","getNamedItem","xAPILaunch","terminate_on_unload","strict_callbacks","launchToken","launchEndpoint","terminate","launch","URL","pathname","xhr2","code","err","launchData","onunload","wrapper","querySelectorAll","getLang","lang","navigator","language","browserLanguage","systemLanguage","userLanguage","process","env","LANG","str","langprop","ret","dispGotten","lastIndexOf","getMoreStatements","iterations","stmts","getMore","statements","getActorIdString","getActorDisplay","v","getObjectType","getObjectIdString","getObjectDisplay","disp"],"mappings":"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","file":"xapiwrapper.min.js.map","sourceRoot":"dist/","sourcesContent":["/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n/**\r\n * CryptoJS core components.\r\n */\r\nvar CryptoJS = CryptoJS || (function (Math, undefined) {\r\n    /**\r\n     * CryptoJS namespace.\r\n     */\r\n    var C = {};\r\n\r\n    /**\r\n     * Library namespace.\r\n     */\r\n    var C_lib = C.lib = {};\r\n\r\n    /**\r\n     * Base object for prototypal inheritance.\r\n     */\r\n    var Base = C_lib.Base = (function () {\r\n        function F() {}\r\n\r\n        return {\r\n            /**\r\n             * Creates a new object that inherits from this object.\r\n             *\r\n             * @param {Object} overrides Properties to copy into the new object.\r\n             *\r\n             * @return {Object} The new object.\r\n             *\r\n             * @static\r\n             *\r\n             * @example\r\n             *\r\n             *     var MyType = CryptoJS.lib.Base.extend({\r\n             *         field: 'value',\r\n             *\r\n             *         method: function () {\r\n             *         }\r\n             *     });\r\n             */\r\n            extend: function (overrides) {\r\n                // Spawn\r\n                F.prototype = this;\r\n                var subtype = new F();\r\n\r\n                // Augment\r\n                if (overrides) {\r\n                    subtype.mixIn(overrides);\r\n                }\r\n\r\n                // Create default initializer\r\n                if (!subtype.hasOwnProperty('init')) {\r\n                    subtype.init = function () {\r\n                        subtype.$super.init.apply(this, arguments);\r\n                    };\r\n                }\r\n\r\n                // Initializer's prototype is the subtype object\r\n                subtype.init.prototype = subtype;\r\n\r\n                // Reference supertype\r\n                subtype.$super = this;\r\n\r\n                return subtype;\r\n            },\r\n\r\n            /**\r\n             * Extends this object and runs the init method.\r\n             * Arguments to create() will be passed to init().\r\n             *\r\n             * @return {Object} The new object.\r\n             *\r\n             * @static\r\n             *\r\n             * @example\r\n             *\r\n             *     var instance = MyType.create();\r\n             */\r\n            create: function () {\r\n                var instance = this.extend();\r\n                instance.init.apply(instance, arguments);\r\n\r\n                return instance;\r\n            },\r\n\r\n            /**\r\n             * Initializes a newly created object.\r\n             * Override this method to add some logic when your objects are created.\r\n             *\r\n             * @example\r\n             *\r\n             *     var MyType = CryptoJS.lib.Base.extend({\r\n             *         init: function () {\r\n             *             // ...\r\n             *         }\r\n             *     });\r\n             */\r\n            init: function () {\r\n            },\r\n\r\n            /**\r\n             * Copies properties into this object.\r\n             *\r\n             * @param {Object} properties The properties to mix in.\r\n             *\r\n             * @example\r\n             *\r\n             *     MyType.mixIn({\r\n             *         field: 'value'\r\n             *     });\r\n             */\r\n            mixIn: function (properties) {\r\n                for (var propertyName in properties) {\r\n                    if (properties.hasOwnProperty(propertyName)) {\r\n                        this[propertyName] = properties[propertyName];\r\n                    }\r\n                }\r\n\r\n                // IE won't copy toString using the loop above\r\n                if (properties.hasOwnProperty('toString')) {\r\n                    this.toString = properties.toString;\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Creates a copy of this object.\r\n             *\r\n             * @return {Object} The clone.\r\n             *\r\n             * @example\r\n             *\r\n             *     var clone = instance.clone();\r\n             */\r\n            clone: function () {\r\n                return this.init.prototype.extend(this);\r\n            }\r\n        };\r\n    }());\r\n\r\n    /**\r\n     * An array of 32-bit words.\r\n     *\r\n     * @property {Array} words The array of 32-bit words.\r\n     * @property {number} sigBytes The number of significant bytes in this word array.\r\n     */\r\n    var WordArray = C_lib.WordArray = Base.extend({\r\n        /**\r\n         * Initializes a newly created word array.\r\n         *\r\n         * @param {Array} words (Optional) An array of 32-bit words.\r\n         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.lib.WordArray.create();\r\n         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\r\n         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\r\n         */\r\n        init: function (words, sigBytes) {\r\n            words = this.words = words || [];\r\n\r\n            if (sigBytes != undefined) {\r\n                this.sigBytes = sigBytes;\r\n            } else {\r\n                this.sigBytes = words.length * 4;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Converts this word array to a string.\r\n         *\r\n         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\r\n         *\r\n         * @return {string} The stringified word array.\r\n         *\r\n         * @example\r\n         *\r\n         *     var string = wordArray + '';\r\n         *     var string = wordArray.toString();\r\n         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\r\n         */\r\n        toString: function (encoder) {\r\n            return (encoder || Hex).stringify(this);\r\n        },\r\n\r\n        /**\r\n         * Concatenates a word array to this word array.\r\n         *\r\n         * @param {WordArray} wordArray The word array to append.\r\n         *\r\n         * @return {WordArray} This word array.\r\n         *\r\n         * @example\r\n         *\r\n         *     wordArray1.concat(wordArray2);\r\n         */\r\n        concat: function (wordArray) {\r\n            // Shortcuts\r\n            var thisWords = this.words;\r\n            var thatWords = wordArray.words;\r\n            var thisSigBytes = this.sigBytes;\r\n            var thatSigBytes = wordArray.sigBytes;\r\n\r\n            // Clamp excess bits\r\n            this.clamp();\r\n\r\n            // Concat\r\n            if (thisSigBytes % 4) {\r\n                // Copy one byte at a time\r\n                for (var i = 0; i < thatSigBytes; i++) {\r\n                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\r\n                }\r\n            } else if (thatWords.length > 0xffff) {\r\n                // Copy one word at a time\r\n                for (var i = 0; i < thatSigBytes; i += 4) {\r\n                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\r\n                }\r\n            } else {\r\n                // Copy all words at once\r\n                thisWords.push.apply(thisWords, thatWords);\r\n            }\r\n            this.sigBytes += thatSigBytes;\r\n\r\n            // Chainable\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes insignificant bits.\r\n         *\r\n         * @example\r\n         *\r\n         *     wordArray.clamp();\r\n         */\r\n        clamp: function () {\r\n            // Shortcuts\r\n            var words = this.words;\r\n            var sigBytes = this.sigBytes;\r\n\r\n            // Clamp\r\n            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\r\n            words.length = Math.ceil(sigBytes / 4);\r\n        },\r\n\r\n        /**\r\n         * Creates a copy of this word array.\r\n         *\r\n         * @return {WordArray} The clone.\r\n         *\r\n         * @example\r\n         *\r\n         *     var clone = wordArray.clone();\r\n         */\r\n        clone: function () {\r\n            var clone = Base.clone.call(this);\r\n            clone.words = this.words.slice(0);\r\n\r\n            return clone;\r\n        },\r\n\r\n        /**\r\n         * Creates a word array filled with random bytes.\r\n         *\r\n         * @param {number} nBytes The number of random bytes to generate.\r\n         *\r\n         * @return {WordArray} The random word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.lib.WordArray.random(16);\r\n         */\r\n        random: function (nBytes) {\r\n            var words = [];\r\n            for (var i = 0; i < nBytes; i += 4) {\r\n                words.push((Math.random() * 0x100000000) | 0);\r\n            }\r\n\r\n            return new WordArray.init(words, nBytes);\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Encoder namespace.\r\n     */\r\n    var C_enc = C.enc = {};\r\n\r\n    /**\r\n     * Hex encoding strategy.\r\n     */\r\n    var Hex = C_enc.Hex = {\r\n        /**\r\n         * Converts a word array to a hex string.\r\n         *\r\n         * @param {WordArray} wordArray The word array.\r\n         *\r\n         * @return {string} The hex string.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\r\n         */\r\n        stringify: function (wordArray) {\r\n            // Shortcuts\r\n            var words = wordArray.words;\r\n            var sigBytes = wordArray.sigBytes;\r\n\r\n            // Convert\r\n            var hexChars = [];\r\n            for (var i = 0; i < sigBytes; i++) {\r\n                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n                hexChars.push((bite >>> 4).toString(16));\r\n                hexChars.push((bite & 0x0f).toString(16));\r\n            }\r\n\r\n            return hexChars.join('');\r\n        },\r\n\r\n        /**\r\n         * Converts a hex string to a word array.\r\n         *\r\n         * @param {string} hexStr The hex string.\r\n         *\r\n         * @return {WordArray} The word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\r\n         */\r\n        parse: function (hexStr) {\r\n            // Shortcut\r\n            var hexStrLength = hexStr.length;\r\n\r\n            // Convert\r\n            var words = [];\r\n            for (var i = 0; i < hexStrLength; i += 2) {\r\n                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\r\n            }\r\n\r\n            return new WordArray.init(words, hexStrLength / 2);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Latin1 encoding strategy.\r\n     */\r\n    var Latin1 = C_enc.Latin1 = {\r\n        /**\r\n         * Converts a word array to a Latin1 string.\r\n         *\r\n         * @param {WordArray} wordArray The word array.\r\n         *\r\n         * @return {string} The Latin1 string.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\r\n         */\r\n        stringify: function (wordArray) {\r\n            // Shortcuts\r\n            var words = wordArray.words;\r\n            var sigBytes = wordArray.sigBytes;\r\n\r\n            // Convert\r\n            var latin1Chars = [];\r\n            for (var i = 0; i < sigBytes; i++) {\r\n                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n                latin1Chars.push(String.fromCharCode(bite));\r\n            }\r\n\r\n            return latin1Chars.join('');\r\n        },\r\n\r\n        /**\r\n         * Converts a Latin1 string to a word array.\r\n         *\r\n         * @param {string} latin1Str The Latin1 string.\r\n         *\r\n         * @return {WordArray} The word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\r\n         */\r\n        parse: function (latin1Str) {\r\n            // Shortcut\r\n            var latin1StrLength = latin1Str.length;\r\n\r\n            // Convert\r\n            var words = [];\r\n            for (var i = 0; i < latin1StrLength; i++) {\r\n                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\r\n            }\r\n\r\n            return new WordArray.init(words, latin1StrLength);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * UTF-8 encoding strategy.\r\n     */\r\n    var Utf8 = C_enc.Utf8 = {\r\n        /**\r\n         * Converts a word array to a UTF-8 string.\r\n         *\r\n         * @param {WordArray} wordArray The word array.\r\n         *\r\n         * @return {string} The UTF-8 string.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\r\n         */\r\n        stringify: function (wordArray) {\r\n            try {\r\n                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\r\n            } catch (e) {\r\n                throw new Error('Malformed UTF-8 data');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Converts a UTF-8 string to a word array.\r\n         *\r\n         * @param {string} utf8Str The UTF-8 string.\r\n         *\r\n         * @return {WordArray} The word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\r\n         */\r\n        parse: function (utf8Str) {\r\n            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\r\n        }\r\n    };\r\n    /**\r\n     * Base64 encoding strategy.\r\n     */\r\n    var Base64 = C_enc.Base64 = {\r\n        /**\r\n         * Converts a word array to a Base64 string.\r\n         *\r\n         * @param {WordArray} wordArray The word array.\r\n         *\r\n         * @return {string} The Base64 string.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\r\n         */\r\n        stringify: function (wordArray) {\r\n            // Shortcuts\r\n            var words = wordArray.words;\r\n            var sigBytes = wordArray.sigBytes;\r\n            var map = this._map;\r\n\r\n            // Clamp excess bits\r\n            wordArray.clamp();\r\n\r\n            // Convert\r\n            var base64Chars = [];\r\n            for (var i = 0; i < sigBytes; i += 3) {\r\n                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\r\n                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\r\n                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\r\n\r\n                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\r\n\r\n                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\r\n                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\r\n                }\r\n            }\r\n\r\n            // Add padding\r\n            var paddingChar = map.charAt(64);\r\n            if (paddingChar) {\r\n                while (base64Chars.length % 4) {\r\n                    base64Chars.push(paddingChar);\r\n                }\r\n            }\r\n\r\n            return base64Chars.join('');\r\n        },\r\n\r\n        /**\r\n         * Converts a Base64 string to a word array.\r\n         *\r\n         * @param {string} base64Str The Base64 string.\r\n         *\r\n         * @return {WordArray} The word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\r\n         */\r\n        parse: function (base64Str) {\r\n            // Shortcuts\r\n            var base64StrLength = base64Str.length;\r\n            var map = this._map;\r\n\r\n            // Ignore padding\r\n            var paddingChar = map.charAt(64);\r\n            if (paddingChar) {\r\n                var paddingIndex = base64Str.indexOf(paddingChar);\r\n                if (paddingIndex != -1) {\r\n                    base64StrLength = paddingIndex;\r\n                }\r\n            }\r\n\r\n            // Convert\r\n            var words = [];\r\n            var nBytes = 0;\r\n            for (var i = 0; i < base64StrLength; i++) {\r\n                if (i % 4) {\r\n                    var bits1 = map.indexOf(base64Str.charAt(i - 1)) << ((i % 4) * 2);\r\n                    var bits2 = map.indexOf(base64Str.charAt(i)) >>> (6 - (i % 4) * 2);\r\n                    words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\r\n                    nBytes++;\r\n                }\r\n            }\r\n\r\n            return WordArray.create(words, nBytes);\r\n        },\r\n\r\n        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\r\n    };\r\n\r\n    /**\r\n     * Abstract buffered block algorithm template.\r\n     *\r\n     * The property blockSize must be implemented in a concrete subtype.\r\n     *\r\n     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\r\n     */\r\n    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\r\n        /**\r\n         * Resets this block algorithm's data buffer to its initial state.\r\n         *\r\n         * @example\r\n         *\r\n         *     bufferedBlockAlgorithm.reset();\r\n         */\r\n        reset: function () {\r\n            // Initial values\r\n            this._data = new WordArray.init();\r\n            this._nDataBytes = 0;\r\n        },\r\n\r\n        /**\r\n         * Adds new data to this block algorithm's buffer.\r\n         *\r\n         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\r\n         *\r\n         * @example\r\n         *\r\n         *     bufferedBlockAlgorithm._append('data');\r\n         *     bufferedBlockAlgorithm._append(wordArray);\r\n         */\r\n        _append: function (data) {\r\n            // Convert string to WordArray, else assume WordArray already\r\n            if (typeof data == 'string') {\r\n                data = Utf8.parse(data);\r\n            }\r\n\r\n            // Append\r\n            this._data.concat(data);\r\n            this._nDataBytes += data.sigBytes;\r\n        },\r\n\r\n        /**\r\n         * Processes available data blocks.\r\n         *\r\n         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\r\n         *\r\n         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\r\n         *\r\n         * @return {WordArray} The processed data.\r\n         *\r\n         * @example\r\n         *\r\n         *     var processedData = bufferedBlockAlgorithm._process();\r\n         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\r\n         */\r\n        _process: function (doFlush) {\r\n            // Shortcuts\r\n            var data = this._data;\r\n            var dataWords = data.words;\r\n            var dataSigBytes = data.sigBytes;\r\n            var blockSize = this.blockSize;\r\n            var blockSizeBytes = blockSize * 4;\r\n\r\n            // Count blocks ready\r\n            var nBlocksReady = dataSigBytes / blockSizeBytes;\r\n            if (doFlush) {\r\n                // Round up to include partial blocks\r\n                nBlocksReady = Math.ceil(nBlocksReady);\r\n            } else {\r\n                // Round down to include only full blocks,\r\n                // less the number of blocks that must remain in the buffer\r\n                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\r\n            }\r\n\r\n            // Count words ready\r\n            var nWordsReady = nBlocksReady * blockSize;\r\n\r\n            // Count bytes ready\r\n            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\r\n\r\n            // Process blocks\r\n            if (nWordsReady) {\r\n                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\r\n                    // Perform concrete-algorithm logic\r\n                    this._doProcessBlock(dataWords, offset);\r\n                }\r\n\r\n                // Remove processed words\r\n                var processedWords = dataWords.splice(0, nWordsReady);\r\n                data.sigBytes -= nBytesReady;\r\n            }\r\n\r\n            // Return processed words\r\n            return new WordArray.init(processedWords, nBytesReady);\r\n        },\r\n\r\n        /**\r\n         * Creates a copy of this object.\r\n         *\r\n         * @return {Object} The clone.\r\n         *\r\n         * @example\r\n         *\r\n         *     var clone = bufferedBlockAlgorithm.clone();\r\n         */\r\n        clone: function () {\r\n            var clone = Base.clone.call(this);\r\n            clone._data = this._data.clone();\r\n\r\n            return clone;\r\n        },\r\n\r\n        _minBufferSize: 0\r\n    });\r\n\r\n    /**\r\n     * Abstract hasher template.\r\n     *\r\n     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\r\n     */\r\n    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\r\n        /**\r\n         * Configuration options.\r\n         */\r\n        cfg: Base.extend(),\r\n\r\n        /**\r\n         * Initializes a newly created hasher.\r\n         *\r\n         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\r\n         *\r\n         * @example\r\n         *\r\n         *     var hasher = CryptoJS.algo.SHA256.create();\r\n         */\r\n        init: function (cfg) {\r\n            // Apply config defaults\r\n            this.cfg = this.cfg.extend(cfg);\r\n\r\n            // Set initial values\r\n            this.reset();\r\n        },\r\n\r\n        /**\r\n         * Resets this hasher to its initial state.\r\n         *\r\n         * @example\r\n         *\r\n         *     hasher.reset();\r\n         */\r\n        reset: function () {\r\n            // Reset data buffer\r\n            BufferedBlockAlgorithm.reset.call(this);\r\n\r\n            // Perform concrete-hasher logic\r\n            this._doReset();\r\n        },\r\n\r\n        /**\r\n         * Updates this hasher with a message.\r\n         *\r\n         * @param {WordArray|string} messageUpdate The message to append.\r\n         *\r\n         * @return {Hasher} This hasher.\r\n         *\r\n         * @example\r\n         *\r\n         *     hasher.update('message');\r\n         *     hasher.update(wordArray);\r\n         */\r\n        update: function (messageUpdate) {\r\n            // Append\r\n            this._append(messageUpdate);\r\n\r\n            // Update the hash\r\n            this._process();\r\n\r\n            // Chainable\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Finalizes the hash computation.\r\n         * Note that the finalize operation is effectively a destructive, read-once operation.\r\n         *\r\n         * @param {WordArray|string} messageUpdate (Optional) A final message update.\r\n         *\r\n         * @return {WordArray} The hash.\r\n         *\r\n         * @example\r\n         *\r\n         *     var hash = hasher.finalize();\r\n         *     var hash = hasher.finalize('message');\r\n         *     var hash = hasher.finalize(wordArray);\r\n         */\r\n        finalize: function (messageUpdate) {\r\n            // Final message update\r\n            if (messageUpdate) {\r\n                this._append(messageUpdate);\r\n            }\r\n\r\n            // Perform concrete-hasher logic\r\n            var hash = this._doFinalize();\r\n\r\n            return hash;\r\n        },\r\n\r\n        blockSize: 512/32,\r\n\r\n        /**\r\n         * Creates a shortcut function to a hasher's object interface.\r\n         *\r\n         * @param {Hasher} hasher The hasher to create a helper for.\r\n         *\r\n         * @return {Function} The shortcut function.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\r\n         */\r\n        _createHelper: function (hasher) {\r\n            return function (message, cfg) {\r\n                return new hasher.init(cfg).finalize(message);\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Creates a shortcut function to the HMAC's object interface.\r\n         *\r\n         * @param {Hasher} hasher The hasher to use in this HMAC helper.\r\n         *\r\n         * @return {Function} The shortcut function.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\r\n         */\r\n        _createHmacHelper: function (hasher) {\r\n            return function (message, key) {\r\n                return new C_algo.HMAC.init(hasher, key).finalize(message);\r\n            };\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Algorithm namespace.\r\n     */\r\n    var C_algo = C.algo = {};\r\n\r\n    // Reusable object\r\n    var W = [];\r\n\r\n    /**\r\n     * SHA-1 hash algorithm.\r\n     */\r\n    var SHA1 = C_algo.SHA1 = Hasher.extend({\r\n        _doReset: function () {\r\n            this._hash = new WordArray.init([\r\n                0x67452301, 0xefcdab89,\r\n                0x98badcfe, 0x10325476,\r\n                0xc3d2e1f0\r\n            ]);\r\n        },\r\n\r\n        _doProcessBlock: function (M, offset) {\r\n            // Shortcut\r\n            var H = this._hash.words;\r\n\r\n            // Working variables\r\n            var a = H[0];\r\n            var b = H[1];\r\n            var c = H[2];\r\n            var d = H[3];\r\n            var e = H[4];\r\n\r\n            // Computation\r\n            for (var i = 0; i < 80; i++) {\r\n                if (i < 16) {\r\n                    W[i] = M[offset + i] | 0;\r\n                } else {\r\n                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n                    W[i] = (n << 1) | (n >>> 31);\r\n                }\r\n\r\n                var t = ((a << 5) | (a >>> 27)) + e + W[i];\r\n                if (i < 20) {\r\n                    t += ((b & c) | (~b & d)) + 0x5a827999;\r\n                } else if (i < 40) {\r\n                    t += (b ^ c ^ d) + 0x6ed9eba1;\r\n                } else if (i < 60) {\r\n                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\r\n                } else /* if (i < 80) */ {\r\n                    t += (b ^ c ^ d) - 0x359d3e2a;\r\n                }\r\n\r\n                e = d;\r\n                d = c;\r\n                c = (b << 30) | (b >>> 2);\r\n                b = a;\r\n                a = t;\r\n            }\r\n\r\n            // Intermediate hash value\r\n            H[0] = (H[0] + a) | 0;\r\n            H[1] = (H[1] + b) | 0;\r\n            H[2] = (H[2] + c) | 0;\r\n            H[3] = (H[3] + d) | 0;\r\n            H[4] = (H[4] + e) | 0;\r\n        },\r\n\r\n        _doFinalize: function () {\r\n            // Shortcuts\r\n            var data = this._data;\r\n            var dataWords = data.words;\r\n\r\n            var nBitsTotal = this._nDataBytes * 8;\r\n            var nBitsLeft = data.sigBytes * 8;\r\n\r\n            // Add padding\r\n            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\r\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\r\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\r\n            data.sigBytes = dataWords.length * 4;\r\n\r\n            // Hash final blocks\r\n            this._process();\r\n\r\n            // Return final computed hash\r\n            return this._hash;\r\n        },\r\n\r\n        clone: function () {\r\n            var clone = Hasher.clone.call(this);\r\n            clone._hash = this._hash.clone();\r\n\r\n            return clone;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Shortcut function to the hasher's object interface.\r\n     *\r\n     * @param {WordArray|string} message The message to hash.\r\n     *\r\n     * @return {WordArray} The hash.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hash = CryptoJS.SHA1('message');\r\n     *     var hash = CryptoJS.SHA1(wordArray);\r\n     */\r\n    C.SHA1 = Hasher._createHelper(SHA1);\r\n\r\n    /**\r\n     * Shortcut function to the HMAC's object interface.\r\n     *\r\n     * @param {WordArray|string} message The message to hash.\r\n     * @param {WordArray|string} key The secret key.\r\n     *\r\n     * @return {WordArray} The HMAC.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hmac = CryptoJS.HmacSHA1(message, key);\r\n     */\r\n    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\r\n\r\n    return C;\r\n}(Math));\r\n\r\n\r\n//add the sha256 functions\r\n\r\n/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\nvar CryptoJS=CryptoJS||function(h,s){var f={},g=f.lib={},q=function(){},m=g.Base={extend:function(a){q.prototype=this;var c=new q;a&&c.mixIn(a);c.hasOwnProperty(\"init\")||(c.init=function(){c.$super.init.apply(this,arguments)});c.init.prototype=c;c.$super=this;return c},create:function(){var a=this.extend();a.init.apply(a,arguments);return a},init:function(){},mixIn:function(a){for(var c in a)a.hasOwnProperty(c)&&(this[c]=a[c]);a.hasOwnProperty(\"toString\")&&(this.toString=a.toString)},clone:function(){return this.init.prototype.extend(this)}},\r\nr=g.WordArray=m.extend({init:function(a,c){a=this.words=a||[];this.sigBytes=c!=s?c:4*a.length},toString:function(a){return(a||k).stringify(this)},concat:function(a){var c=this.words,d=a.words,b=this.sigBytes;a=a.sigBytes;this.clamp();if(b%4)for(var e=0;e<a;e++)c[b+e>>>2]|=(d[e>>>2]>>>24-8*(e%4)&255)<<24-8*((b+e)%4);else if(65535<d.length)for(e=0;e<a;e+=4)c[b+e>>>2]=d[e>>>2];else c.push.apply(c,d);this.sigBytes+=a;return this},clamp:function(){var a=this.words,c=this.sigBytes;a[c>>>2]&=4294967295<<\r\n32-8*(c%4);a.length=h.ceil(c/4)},clone:function(){var a=m.clone.call(this);a.words=this.words.slice(0);return a},random:function(a){for(var c=[],d=0;d<a;d+=4)c.push(4294967296*h.random()|0);return new r.init(c,a)}}),l=f.enc={},k=l.Hex={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++){var e=c[b>>>2]>>>24-8*(b%4)&255;d.push((e>>>4).toString(16));d.push((e&15).toString(16))}return d.join(\"\")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b+=2)d[b>>>3]|=parseInt(a.substr(b,\r\n2),16)<<24-4*(b%8);return new r.init(d,c/2)}},n=l.Latin1={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++)d.push(String.fromCharCode(c[b>>>2]>>>24-8*(b%4)&255));return d.join(\"\")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b++)d[b>>>2]|=(a.charCodeAt(b)&255)<<24-8*(b%4);return new r.init(d,c)}},j=l.Utf8={stringify:function(a){try{return decodeURIComponent(escape(n.stringify(a)))}catch(c){throw Error(\"Malformed UTF-8 data\");}},parse:function(a){return n.parse(unescape(encodeURIComponent(a)))}},\r\nu=g.BufferedBlockAlgorithm=m.extend({reset:function(){this._data=new r.init;this._nDataBytes=0},_append:function(a){\"string\"==typeof a&&(a=j.parse(a));this._data.concat(a);this._nDataBytes+=a.sigBytes},_process:function(a){var c=this._data,d=c.words,b=c.sigBytes,e=this.blockSize,f=b/(4*e),f=a?h.ceil(f):h.max((f|0)-this._minBufferSize,0);a=f*e;b=h.min(4*a,b);if(a){for(var g=0;g<a;g+=e)this._doProcessBlock(d,g);g=d.splice(0,a);c.sigBytes-=b}return new r.init(g,b)},clone:function(){var a=m.clone.call(this);\r\na._data=this._data.clone();return a},_minBufferSize:0});g.Hasher=u.extend({cfg:m.extend(),init:function(a){this.cfg=this.cfg.extend(a);this.reset()},reset:function(){u.reset.call(this);this._doReset()},update:function(a){this._append(a);this._process();return this},finalize:function(a){a&&this._append(a);return this._doFinalize()},blockSize:16,_createHelper:function(a){return function(c,d){return(new a.init(d)).finalize(c)}},_createHmacHelper:function(a){return function(c,d){return(new t.HMAC.init(a,\r\nd)).finalize(c)}}});var t=f.algo={};return f}(Math);\r\n(function(h){for(var s=CryptoJS,f=s.lib,g=f.WordArray,q=f.Hasher,f=s.algo,m=[],r=[],l=function(a){return 4294967296*(a-(a|0))|0},k=2,n=0;64>n;){var j;a:{j=k;for(var u=h.sqrt(j),t=2;t<=u;t++)if(!(j%t)){j=!1;break a}j=!0}j&&(8>n&&(m[n]=l(h.pow(k,0.5))),r[n]=l(h.pow(k,1/3)),n++);k++}var a=[],f=f.SHA256=q.extend({_doReset:function(){this._hash=new g.init(m.slice(0))},_doProcessBlock:function(c,d){for(var b=this._hash.words,e=b[0],f=b[1],g=b[2],j=b[3],h=b[4],m=b[5],n=b[6],q=b[7],p=0;64>p;p++){if(16>p)a[p]=\r\nc[d+p]|0;else{var k=a[p-15],l=a[p-2];a[p]=((k<<25|k>>>7)^(k<<14|k>>>18)^k>>>3)+a[p-7]+((l<<15|l>>>17)^(l<<13|l>>>19)^l>>>10)+a[p-16]}k=q+((h<<26|h>>>6)^(h<<21|h>>>11)^(h<<7|h>>>25))+(h&m^~h&n)+r[p]+a[p];l=((e<<30|e>>>2)^(e<<19|e>>>13)^(e<<10|e>>>22))+(e&f^e&g^f&g);q=n;n=m;m=h;h=j+k|0;j=g;g=f;f=e;e=k+l|0}b[0]=b[0]+e|0;b[1]=b[1]+f|0;b[2]=b[2]+g|0;b[3]=b[3]+j|0;b[4]=b[4]+h|0;b[5]=b[5]+m|0;b[6]=b[6]+n|0;b[7]=b[7]+q|0},_doFinalize:function(){var a=this._data,d=a.words,b=8*this._nDataBytes,e=8*a.sigBytes;\r\nd[e>>>5]|=128<<24-e%32;d[(e+64>>>9<<4)+14]=h.floor(b/4294967296);d[(e+64>>>9<<4)+15]=b;a.sigBytes=4*d.length;this._process();return this._hash},clone:function(){var a=q.clone.call(this);a._hash=this._hash.clone();return a}});s.SHA256=q._createHelper(f);s.HmacSHA256=q._createHmacHelper(f)})(Math);\r\n(function(){var h=CryptoJS,s=h.enc.Utf8;h.algo.HMAC=h.lib.Base.extend({init:function(f,g){f=this._hasher=new f.init;\"string\"==typeof g&&(g=s.parse(g));var h=f.blockSize,m=4*h;g.sigBytes>m&&(g=f.finalize(g));g.clamp();for(var r=this._oKey=g.clone(),l=this._iKey=g.clone(),k=r.words,n=l.words,j=0;j<h;j++)k[j]^=1549556828,n[j]^=909522486;r.sigBytes=l.sigBytes=m;this.reset()},reset:function(){var f=this._hasher;f.reset();f.update(this._iKey)},update:function(f){this._hasher.update(f);return this},finalize:function(f){var g=\r\nthis._hasher;f=g.finalize(f);g.reset();return g.finalize(this._oKey.clone().concat(f))}})})();\r\n","// adds toISOString to date objects if not there\r\n// from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString\r\nif ( !Date.prototype.toISOString ) {\r\n  ( function() {\r\n\r\n    function pad(number) {\r\n      var r = String(number);\r\n      if ( r.length === 1 ) {\r\n        r = '0' + r;\r\n      }\r\n      return r;\r\n    }\r\n\r\n    Date.prototype.toISOString = function() {\r\n      return this.getUTCFullYear()\r\n        + '-' + pad( this.getUTCMonth() + 1 )\r\n        + '-' + pad( this.getUTCDate() )\r\n        + 'T' + pad( this.getUTCHours() )\r\n        + ':' + pad( this.getUTCMinutes() )\r\n        + ':' + pad( this.getUTCSeconds() )\r\n        + '.' + String( (this.getUTCMilliseconds()/1000).toFixed(3) ).slice( 2, 5 )\r\n        + 'Z';\r\n    };\r\n\r\n  }() );\r\n}\r\n\r\n// shim for old-style Base64 lib\r\nfunction toBase64(text){\r\n  if(CryptoJS && CryptoJS.enc.Base64)\r\n    return CryptoJS.enc.Base64.stringify(CryptoJS.enc.Latin1.parse(text));\r\n  else\r\n    return Base64.encode(text);\r\n}\r\n\r\n// shim for old-style crypto lib\r\nfunction toSHA1(text){\r\n  if(CryptoJS && CryptoJS.SHA1)\r\n    return CryptoJS.SHA1(text).toString();\r\n  else\r\n    return Crypto.util.bytesToHex( Crypto.SHA1(text,{asBytes:true}) );\r\n}\r\n\r\nfunction toSHA256(content) {\r\n  if (Object.prototype.toString.call(content) !== \"[object ArrayBuffer]\") {\r\n    return CryptoJS.SHA256(content).toString(CryptoJS.enc.Hex);\r\n  }\r\n\r\n  // Create a WordArray from the ArrayBuffer.\r\n  var i8a = new Uint8Array(content);\r\n  var a = [];\r\n  for (var i = 0; i < i8a.length; i += 4) {\r\n    a.push(i8a[i] << 24 | i8a[i + 1] << 16 | i8a[i + 2] << 8 | i8a[i + 3]);\r\n  }\r\n\r\n  return CryptoJS.SHA256(CryptoJS.lib.WordArray.create(a, i8a.length)).toString(CryptoJS.enc.Hex);\r\n}\r\n\r\n// check if string or object is date, if it is, return date object\r\n// feburary 31st == march 3rd in this solution\r\nfunction isDate(date) {\r\n    // check if object is being passed\r\n    if ( Object.prototype.toString.call(date) === \"[object Date]\" )\r\n        var d = date;\r\n    else\r\n        var d = new Date(date);\r\n    // deep check on date object\r\n    if ( Object.prototype.toString.call(d) === \"[object Date]\" )\r\n    {\r\n        // it is a date\r\n        if ( isNaN( d.valueOf() ) )\r\n        {\r\n            ADL.XAPIWrapper.log(\"Invalid date String passed\");\r\n            return null;\r\n        } else {\r\n            return d;\r\n        }\r\n    } else {\r\n        // not a date\r\n        ADL.XAPIWrapper.log(\"Invalid date object\");\r\n        return null;\r\n    }\r\n}\r\n\r\n    log.debug = false;\r\n\r\n    function getByteLen(normal_val) {\r\n        // Force string type\r\n        normal_val = String(normal_val);\r\n\r\n        var byteLen = 0;\r\n        for (var i = 0; i < normal_val.length; i++) {\r\n            var c = normal_val.charCodeAt(i);\r\n            byteLen += c < (1 <<  7) ? 1 :\r\n                       c < (1 << 11) ? 2 :\r\n                       c < (1 << 16) ? 3 :\r\n                       c < (1 << 21) ? 4 :\r\n                       c < (1 << 26) ? 5 :\r\n                       c < (1 << 31) ? 6 : Number.NaN;\r\n        }\r\n        return byteLen;\r\n    }\r\n\r\n    /**\r\n     * Config object used w/ url params to configure the lrs object\r\n     * change these to match your lrs\r\n     * @return {object} config object\r\n     * @example\r\n     * var conf = {\r\n     *    \"endpoint\" : \"https://lrs.adlnet.gov/xapi/\",\r\n     *    \"auth\" : \"Basic \" + toBase64('tom:1234'),\r\n     * };\r\n     * ADL.XAPIWrapper.changeConfig(conf);\r\n     */\r\n    var Config = function()\r\n    {\r\n        var conf = {};\r\n        conf['endpoint'] = \"http://localhost:8000/xapi/\";\r\n        //try\r\n        //{\r\n            conf['auth'] = \"Basic \" + toBase64('tom:1234');\r\n        //}\r\n        //catch (e)\r\n        //{\r\n        //    log(\"Exception in Config trying to encode auth: \" + e);\r\n        //}\r\n\r\n        // Statement defaults\r\n        // conf[\"actor\"] = {\"mbox\":\"default@example.com\"};\r\n        // conf[\"registration\"] =  ruuid();\r\n        // conf[\"grouping\"] = {\"id\":\"ctxact:default/grouping\"};\r\n        // conf[\"activity_platform\"] = \"default platform\";\r\n\r\n        // Behavior defaults\r\n        // conf[\"strictCallbacks\"] = false; // Strict error-first callbacks\r\n        return conf\r\n    }();\r\n\r\n    /**\r\n     * XAPIWrapper Constructor\r\n     * @param {object} config   with a minimum of an endoint property\r\n     * @param {boolean} verifyxapiversion   indicating whether to verify the version of the LRS is compatible with this wrapper\r\n     */\r\n    var XAPIWrapper = function(config, verifyxapiversion)\r\n    {\r\n\r\n\r\n\r\n        this.lrs = getLRSObject(config || {});\r\n        if (this.lrs.user && this.lrs.password)\r\n            updateAuth(this.lrs, this.lrs.user, this.lrs.password);\r\n        this.base = getbase(this.lrs.endpoint);\r\n\r\n        this.withCredentials = false;\r\n        if (config && typeof(config.withCredentials) != 'undefined') {\r\n            this.withCredentials = config.withCredentials;\r\n        }\r\n\r\n        // Ensure that callbacks are always executed, first param is error (null if no error) followed\r\n        // by the result(s)\r\n        this.strictCallbacks = false;\r\n        this.strictCallbacks = config && config.strictCallbacks;\r\n\r\n        function getbase(url)\r\n        {\r\n            var l = parseUrl(url);\r\n            if (l.protocol && l.host) {\r\n                return l.protocol + \"//\" + l.host;\r\n            } else if (l.href) {\r\n                // IE 11 fix.\r\n                var parts = l.href.split(\"//\");\r\n                return parts[0] + \"//\" + parts[1].substr(0, parts[1].indexOf(\"/\"));\r\n            }\r\n            else\r\n                ADL.XAPIWrapper.log(\"Couldn't create base url from endpoint: \" + url);\r\n        }\r\n\r\n        function updateAuth(obj, username, password){\r\n            obj.auth = \"Basic \" + toBase64(username + \":\" + password);\r\n        }\r\n\r\n        if (verifyxapiversion && testConfig.call(this))\r\n        {\r\n            ADL.XHR_request(this.lrs, this.lrs.endpoint+\"about\", \"GET\", null, null,\r\n                function(r){\r\n                    if(r.status == 200)\r\n                    {\r\n                        try\r\n                        {\r\n                            var lrsabout = JSON.parse(r.response);\r\n                            var versionOK = false;\r\n                            for (var idx in lrsabout.version)\r\n                            {\r\n                                if (lrsabout.version.hasOwnProperty(idx))\r\n                                    if(lrsabout.version[idx] == ADL.XAPIWrapper.xapiVersion)\r\n                                    {\r\n                                        versionOK = true;\r\n                                        break;\r\n                                    }\r\n                            }\r\n                            if (!versionOK)\r\n                            {\r\n                                ADL.XAPIWrapper.log(\"The lrs version [\" + lrsabout.version +\"]\"+\r\n                                    \" does not match this wrapper's XAPI version [\" + ADL.XAPIWrapper.xapiVersion + \"]\");\r\n                            }\r\n                        }\r\n                        catch(e)\r\n                        {\r\n                            ADL.XAPIWrapper.log(\"The response was not an about object\")\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        ADL.XAPIWrapper.log(\"The request to get information about the LRS failed: \" + r);\r\n                    }\r\n                }, null, false, null, this.withCredentials, false);\r\n\r\n\r\n        }\r\n\r\n        this.searchParams = function(){\r\n            var sp = {\"format\" : \"exact\"};\r\n            return sp;\r\n        };\r\n\r\n        this.hash = function(tohash){\r\n            if (!tohash) return null;\r\n            try\r\n            {\r\n                return toSHA1(tohash);\r\n            }\r\n            catch(e)\r\n            {\r\n                ADL.XAPIWrapper.log(\"Error trying to hash -- \" + e);\r\n                return null;\r\n            }\r\n        };\r\n\r\n        this.changeConfig = function(config){\r\n            try\r\n            {\r\n                ADL.XAPIWrapper.log(\"updating lrs object with new configuration\");\r\n                this.lrs = mergeRecursive(this.lrs, config);\r\n                if (config.user && config.password)\r\n                    this.updateAuth(this.lrs, config.user, config.password);\r\n                this.base = getbase(this.lrs.endpoint);\r\n                this.withCredentials = config.withCredentials;\r\n                this.strictCallbacks = config.strictCallbacks;\r\n            }\r\n            catch(e)\r\n            {\r\n                ADL.XAPIWrapper.log(\"error while changing configuration -- \" + e);\r\n            }\r\n        };\r\n\r\n        this.updateAuth = updateAuth;\r\n    };\r\n\r\n    // This wrapper is based on the Experience API Spec version:\r\n    XAPIWrapper.prototype.xapiVersion = \"1.0.1\";\r\n\r\n    /**\r\n     * Adds info from the lrs object to the statement, if available.\r\n     * These values could be initialized from the Config object or from the url query string.\r\n     * @param {object} stmt   the statement object\r\n     */\r\n    XAPIWrapper.prototype.prepareStatement = function(stmt)\r\n    {\r\n        if(stmt.actor === undefined){\r\n            stmt.actor = JSON.parse(this.lrs.actor);\r\n        }\r\n        else if(typeof stmt.actor === \"string\") {\r\n            stmt.actor = JSON.parse(stmt.actor);\r\n        }\r\n        if (this.lrs.grouping ||\r\n            this.lrs.registration ||\r\n            this.lrs.activity_platform) {\r\n            if (!stmt.context) {\r\n                stmt.context = {};\r\n            }\r\n        }\r\n\r\n        if (this.lrs.grouping) {\r\n            if (!stmt.context.contextActivities) {\r\n                stmt.context.contextActivities = {};\r\n            }\r\n            stmt.context.contextActivities.grouping = [{ id : this.lrs.grouping }];\r\n        }\r\n        if (this.lrs.registration) {\r\n            stmt.context.registration = this.lrs.registration;\r\n        }\r\n        if (this.lrs.activity_platform) {\r\n            stmt.context.platform = this.lrs.activity_platform;\r\n        }\r\n    };\r\n\r\n    // tests the configuration of the lrs object\r\n    XAPIWrapper.prototype.testConfig = testConfig;\r\n\r\n    // writes to the console if available\r\n    XAPIWrapper.prototype.log = log;\r\n\r\n    // Default encoding\r\n    XAPIWrapper.prototype.defaultEncoding = 'utf-8';\r\n\r\n    /**\r\n     * Send a single statement to the LRS. Makes a Javascript object\r\n     * with the statement id as 'id' available to the callback function.\r\n     * @param {object} stmt   statement object to send\r\n     * @param {function} [callback]   function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     *            the function will be passed the XMLHttpRequest object\r\n     *            and an object with an id property assigned the id\r\n     *            of the statement\r\n     * @return {object} object containing xhr object and id of statement\r\n     * @example\r\n     * // Send Statement\r\n     * var stmt = {\"actor\" : {\"mbox\" : \"mailto:tom@example.com\"},\r\n     *             \"verb\" : {\"id\" : \"http://adlnet.gov/expapi/verbs/answered\",\r\n     *                       \"display\" : {\"en-US\" : \"answered\"}},\r\n     *             \"object\" : {\"id\" : \"http://adlnet.gov/expapi/activities/question\"}};\r\n     * var resp_obj = ADL.XAPIWrapper.sendStatement(stmt);\r\n     * ADL.XAPIWrapper.log(\"[\" + resp_obj.id + \"]: \" + resp_obj.xhr.status + \" - \" + resp_obj.xhr.statusText);\r\n     * >> [3e616d1c-5394-42dc-a3aa-29414f8f0dfe]: 204 - NO CONTENT\r\n     *\r\n     * // Send Statement with Callback\r\n     * var stmt = {\"actor\" : {\"mbox\" : \"mailto:tom@example.com\"},\r\n     *             \"verb\" : {\"id\" : \"http://adlnet.gov/expapi/verbs/answered\",\r\n     *                       \"display\" : {\"en-US\" : \"answered\"}},\r\n     *             \"object\" : {\"id\" : \"http://adlnet.gov/expapi/activities/question\"}};\r\n     * ADL.XAPIWrapper.sendStatement(stmt, function(resp, obj){\r\n     *     ADL.XAPIWrapper.log(\"[\" + obj.id + \"]: \" + resp.status + \" - \" + resp.statusText);});\r\n     * >> [4edfe763-8b84-41f1-a355-78b7601a6fe8]: 204 - NO CONTENT\r\n     */\r\n    XAPIWrapper.prototype.sendStatement = function(stmt, callback, attachments)\r\n    {\r\n        if (this.testConfig())\r\n        {\r\n            this.prepareStatement(stmt);\r\n            var id;\r\n            if (stmt['id'])\r\n            {\r\n                id = stmt['id'];\r\n            }\r\n            else\r\n            {\r\n                id = ADL.ruuid();\r\n                stmt['id'] = id;\r\n            }\r\n\r\n            var payload = JSON.stringify(stmt);\r\n            var extraHeaders = null;\r\n            if(attachments && attachments.length > 0)\r\n            {\r\n                extraHeaders = {}\r\n                payload = this.buildMultipartPost(stmt,attachments,extraHeaders);\r\n            }\r\n            var resp = ADL.XHR_request(this.lrs, this.lrs.endpoint+\"statements\",\r\n                \"POST\", payload, this.lrs.auth, callback, {\"id\":id}, null, extraHeaders,\r\n                this.withCredentials, this.strictCallbacks);\r\n            if (!callback)\r\n                return {\"xhr\":resp,\r\n                        \"id\" :id};\r\n        }\r\n    };\r\n\r\n    XAPIWrapper.prototype.stringToArrayBuffer = function(content, encoding)\r\n    {\r\n        encoding = encoding || ADL.XAPIWrapper.defaultEncoding;\r\n\r\n        return new TextEncoder(encoding).encode(content).buffer;\r\n    };\r\n\r\n    XAPIWrapper.prototype.stringFromArrayBuffer = function(content, encoding) {\r\n        encoding = encoding || ADL.XAPIWrapper.defaultEncoding;\r\n\r\n        return new TextDecoder(encoding).decode(content);\r\n    };\r\n\r\n    /**\r\n    * Build the post body to include the multipart boundries, edit the statement to include the attachment types\r\n    * extraHeaders should be an object. It will have the multipart boundary value set\r\n    * attachments should be an array of objects of the type\r\n    * {\r\n          type:\"signature\" || {\r\n              usageType : URI,\r\n              display: Language-map\r\n              description: Language-map\r\n          },\r\n          value : a UTF8 string containing the binary data of the attachment. For string values, this can just be the JS string.\r\n       }\r\n    */\r\n    XAPIWrapper.prototype.buildMultipartPost = function(statement, attachments, extraHeaders)\r\n    {\r\n        statement.attachments = [];\r\n        for (var i = 0; i < attachments.length; i++) {\r\n            // Replace the term 'signature' with the hard coded definition for a signature attachment\r\n            if (attachments[i].type == \"signature\") {\r\n                attachments[i].type = {\r\n                   \"usageType\": \"http://adlnet.gov/expapi/attachments/signature\",\r\n                   \"display\": {\r\n                    \"en-US\": \"A JWT signature\"\r\n                   },\r\n                   \"description\": {\r\n                    \"en-US\": \"A signature proving the statement was not modified\"\r\n                   },\r\n                   \"contentType\": \"application/octet-stream\"\r\n                }\r\n            }\r\n\r\n            if (typeof attachments[i].value === 'string') {\r\n                // Convert the string value to an array buffer.\r\n                attachments[i].value = this.stringToArrayBuffer(attachments[i].value);\r\n            }\r\n\r\n            // Compute the length and the sha2 of the attachment\r\n            attachments[i].type.length = attachments[i].value.byteLength;\r\n            attachments[i].type.sha2 = toSHA256(attachments[i].value);\r\n\r\n            // Attach the attachment metadata to the statement.\r\n            statement.attachments.push(attachments[i].type);\r\n        }\r\n\r\n        var blobParts = [];\r\n        var boundary = (Math.random() + ' ').substring(2,10) + (Math.random() + ' ').substring(2,10);\r\n\r\n        extraHeaders[\"Content-Type\"] = \"multipart/mixed; boundary=\" + boundary;\r\n\r\n        var CRLF = \"\\r\\n\";\r\n        var header = [\r\n            \"--\" + boundary,\r\n            \"Content-Type: application/json\",\r\n            \"Content-Disposition: form-data; name=\\\"statement\\\"\",\r\n            \"\",\r\n            JSON.stringify(statement)\r\n        ].join(CRLF) + CRLF;\r\n\r\n        blobParts.push(header);\r\n\r\n        for (var i in attachments) {\r\n            if (attachments.hasOwnProperty(i)) {\r\n                var attachmentHeader = [\r\n                    \"--\" + boundary,\r\n                    \"Content-Type: \" + attachments[i].type.contentType,\r\n                    \"Content-Transfer-Encoding: binary\",\r\n                    \"X-Experience-API-Hash: \" + attachments[i].type.sha2\r\n                ].join(CRLF) + CRLF + CRLF;\r\n\r\n                blobParts.push(attachmentHeader);\r\n                blobParts.push(attachments[i].value);\r\n            }\r\n        }\r\n\r\n        blobParts.push(CRLF + \"--\" + boundary + \"--\" + CRLF);\r\n\r\n        return new Blob(blobParts);\r\n    }\r\n    /**\r\n     * Send a list of statements to the LRS.\r\n     * @param {array} stmtArray   the list of statement objects to send\r\n     * @param {function} [callback]   function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     *            the function will be passed the XMLHttpRequest object\r\n     * @return {object} xhr response object\r\n     * @example\r\n     * var stmt = {\"actor\" : {\"mbox\" : \"mailto:tom@example.com\"},\r\n     *             \"verb\" : {\"id\" : \"http://adlnet.gov/expapi/verbs/answered\",\r\n     *                       \"display\" : {\"en-US\" : \"answered\"}},\r\n     *             \"object\" : {\"id\" : \"http://adlnet.gov/expapi/activities/question\"}};\r\n     * var resp_obj = ADL.XAPIWrapper.sendStatement(stmt);\r\n     * ADL.XAPIWrapper.getStatements({\"statementId\":resp_obj.id});\r\n     * >> {\"version\": \"1.0.0\",\r\n     *     \"timestamp\": \"2013-09-09 21:36:40.185841+00:00\",\r\n     *     \"object\": {\"id\": \"http://adlnet.gov/expapi/activities/question\", \"objectType\": \"Activity\"},\r\n     *     \"actor\": {\"mbox\": \"mailto:tom@example.com\", \"name\": \"tom creighton\", \"objectType\": \"Agent\"},\r\n     *     \"stored\": \"2013-09-09 21:36:40.186124+00:00\",\r\n     *     \"verb\": {\"id\": \"http://adlnet.gov/expapi/verbs/answered\", \"display\": {\"en-US\": \"answered\"}},\r\n     *     \"authority\": {\"mbox\": \"mailto:tom@adlnet.gov\", \"name\": \"tom\", \"objectType\": \"Agent\"},\r\n     *     \"context\": {\"registration\": \"51a6f860-1997-11e3-8ffd-0800200c9a66\"},\r\n     *     \"id\": \"ea9c1d01-0606-4ec7-8e5d-20f87b1211ed\"}\r\n     */\r\n    XAPIWrapper.prototype.sendStatements = function(stmtArray, callback)\r\n    {\r\n        if (this.testConfig())\r\n        {\r\n            for(var i in stmtArray)\r\n            {\r\n                if (stmtArray.hasOwnProperty(i))\r\n                    this.prepareStatement(stmtArray[i]);\r\n            }\r\n            var resp = ADL.XHR_request(this.lrs,this.lrs.endpoint+\"statements\",\r\n                \"POST\", JSON.stringify(stmtArray), this.lrs.auth, callback, null,\r\n                false, null, this.withCredentials, this.strictCallbacks);\r\n\r\n\r\n            if (!callback)\r\n            {\r\n                return resp;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get statement(s) based on the searchparams or more url.\r\n     * @param {object} searchparams   an ADL.XAPIWrapper.searchParams object of\r\n     *                key(search parameter)-value(parameter value) pairs.\r\n     *                Example:\r\n     *                  var myparams = ADL.XAPIWrapper.searchParams();\r\n     *                  myparams['verb'] = ADL.verbs.completed.id;\r\n     *                  var completedStmts = ADL.XAPIWrapper.getStatements(myparams);\r\n     * @param {string} more   the more url found in the StatementResults object, if there are more\r\n     *        statements available based on your get statements request. Pass the\r\n     *        more url as this parameter to retrieve those statements.\r\n     * @param {function} [callback] - function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     *            the function will be passed the XMLHttpRequest object\r\n     * @return {object} xhr response object or null if 404\r\n     * @example\r\n     * var ret = ADL.XAPIWrapper.getStatements();\r\n     * if (ret)\r\n     *     ADL.XAPIWrapper.log(ret.statements);\r\n     *\r\n     * >> <Array of statements>\r\n     */\r\n    XAPIWrapper.prototype.getStatements = function(searchparams, more, callback)\r\n    {\r\n        if (this.testConfig())\r\n        {\r\n            var url = this.lrs.endpoint + \"statements\";\r\n            if (more)\r\n            {\r\n                url = this.base + more;\r\n            }\r\n            else\r\n            {\r\n                var urlparams = new Array();\r\n\r\n                for (s in searchparams)\r\n                {\r\n                    if (searchparams.hasOwnProperty(s))\r\n                    {\r\n                        if (s == \"until\" || s == \"since\") {\r\n                            var d = new Date(searchparams[s]);\r\n                            urlparams.push(s + \"=\" + encodeURIComponent(d.toISOString()));\r\n                        } else {\r\n                            urlparams.push(s + \"=\" + encodeURIComponent(searchparams[s]));\r\n                        }\r\n                    }\r\n                }\r\n                if (urlparams.length > 0)\r\n                    url = url + \"?\" + urlparams.join(\"&\");\r\n            }\r\n\r\n            var res = ADL.XHR_request(this.lrs,url, \"GET\", null, this.lrs.auth,\r\n                callback, null, false, null, this.withCredentials, this.strictCallbacks);\r\n\r\n            if(res === undefined || res.status == 404)\r\n            {\r\n                return null\r\n            }\r\n\r\n            try\r\n            {\r\n                return JSON.parse(res.response);\r\n            }\r\n            catch(e)\r\n            {\r\n                return res.response;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Gets the Activity object from the LRS.\r\n     * @param {string} activityid   the id of the Activity to get\r\n     * @param {function} [callback]   function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     *            the function will be passed the XMLHttpRequest object\r\n     * @return {object} xhr response object or null if 404\r\n     * @example\r\n     * var res = ADL.XAPIWrapper.getActivities(\"http://adlnet.gov/expapi/activities/question\");\r\n     * ADL.XAPIWrapper.log(res);\r\n     * >> <Activity object>\r\n     */\r\n    XAPIWrapper.prototype.getActivities = function(activityid, callback)\r\n    {\r\n        if (this.testConfig())\r\n        {\r\n            var url = this.lrs.endpoint + \"activities?activityId=<activityid>\";\r\n            url = url.replace('<activityid>', encodeURIComponent(activityid));\r\n\r\n            var result = ADL.XHR_request(this.lrs, url, \"GET\", null, this.lrs.auth,\r\n                callback, null, true, null, this.withCredentials, this.strictCallbacks);\r\n\r\n            if(result === undefined || result.status == 404)\r\n            {\r\n                return null\r\n            }\r\n\r\n            try\r\n            {\r\n                return JSON.parse(result.response);\r\n            }\r\n            catch(e)\r\n            {\r\n                return result.response;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Store activity state in the LRS\r\n     * @param {string} activityid   the id of the Activity this state is about\r\n     * @param {object} agent   the agent this Activity state is related to\r\n     * @param {string} stateid   the id you want associated with this state\r\n     * @param {string} [registration]   the registraton id associated with this state\r\n     * @param {string} stateval   the state\r\n     * @param {string} [matchHash]    the hash of the state to replace or * to replace any\r\n     * @param {string} [noneMatchHash]    the hash of the current state or * to indicate no previous state\r\n     * @param {function} [callback]   function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     *            the function will be passed the XMLHttpRequest object\r\n     * @return {boolean} false if no activity state is included\r\n     * @example\r\n     * var stateval = {\"info\":\"the state info\"};\r\n     * ADL.XAPIWrapper.sendState(\"http://adlnet.gov/expapi/activities/question\",\r\n     *                    {\"mbox\":\"mailto:tom@example.com\"},\r\n     *                    \"questionstate\", null, stateval);\r\n     */\r\n    XAPIWrapper.prototype.sendState = function(activityid, agent, stateid, registration, stateval, matchHash, noneMatchHash, callback)\r\n    {\r\n        if (this.testConfig())\r\n        {\r\n            var url = this.lrs.endpoint + \"activities/state?activityId=<activity ID>&agent=<agent>&stateId=<stateid>\";\r\n\r\n            url = url.replace('<activity ID>',encodeURIComponent(activityid));\r\n            url = url.replace('<agent>',encodeURIComponent(JSON.stringify(agent)));\r\n            url = url.replace('<stateid>',encodeURIComponent(stateid));\r\n\r\n            if (registration)\r\n            {\r\n                url += \"&registration=\" + encodeURIComponent(registration);\r\n            }\r\n\r\n            var headers = null;\r\n            if(matchHash && noneMatchHash)\r\n            {\r\n                log(\"Can't have both If-Match and If-None-Match\");\r\n            }\r\n            else if (matchHash)\r\n            {\r\n                headers = {\"If-Match\":ADL.formatHash(matchHash)};\r\n            }\r\n            else if (noneMatchHash)\r\n            {\r\n                headers = {\"If-None-Match\":ADL.formatHash(noneMatchHash)};\r\n            }\r\n\r\n            var method = \"PUT\";\r\n            if (stateval)\r\n            {\r\n                if (stateval instanceof Array)\r\n                {\r\n                    stateval = JSON.stringify(stateval);\r\n                    headers = headers || {};\r\n                    headers[\"Content-Type\"] =\"application/json\";\r\n                }\r\n                else if (stateval instanceof Object)\r\n                {\r\n                    stateval = JSON.stringify(stateval);\r\n                    headers = headers || {};\r\n                    headers[\"Content-Type\"] =\"application/json\";\r\n                    method = \"POST\";\r\n                }\r\n                else\r\n                {\r\n                    headers = headers || {};\r\n                    headers[\"Content-Type\"] =\"application/octet-stream\";\r\n                }\r\n            }\r\n            else\r\n            {\r\n                this.log(\"No activity state was included.\");\r\n                return false;\r\n            }\r\n            //(lrs, url, method, data, auth, callback, callbackargs, ignore404, extraHeaders)\r\n\r\n            ADL.XHR_request(this.lrs, url, method, stateval, this.lrs.auth, callback,\r\n                null, null, headers, this.withCredentials, this.strictCallbacks);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get activity state from the LRS\r\n     * @param {string} activityid   the id of the Activity this state is about\r\n     * @param {object} agent   the agent this Activity state is related to\r\n     * @param {string} [stateid]    the id of the state, if not included, the response will be a list of stateids\r\n     *            associated with the activity and agent)\r\n     * @param {string} [registration]   the registraton id associated with this state\r\n     * @param {object} [since]    date object or date string telling the LRS to return objects newer than the date supplied\r\n     * @param {function} [callback]   function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     *            the function will be passed the XMLHttpRequest object\r\n     * @return {object} xhr response object or null if 404\r\n     * @example\r\n     * ADL.XAPIWrapper.getState(\"http://adlnet.gov/expapi/activities/question\",\r\n     *                  {\"mbox\":\"mailto:tom@example.com\"}, \"questionstate\");\r\n     * >> {info: \"the state info\"}\r\n     */\r\n    XAPIWrapper.prototype.getState = function(activityid, agent, stateid, registration, since, callback)\r\n    {\r\n        if (this.testConfig())\r\n        {\r\n            var url = this.lrs.endpoint + \"activities/state?activityId=<activity ID>&agent=<agent>\";\r\n\r\n            url = url.replace('<activity ID>',encodeURIComponent(activityid));\r\n            url = url.replace('<agent>',encodeURIComponent(JSON.stringify(agent)));\r\n\r\n            if (stateid)\r\n            {\r\n                url += \"&stateId=\" + encodeURIComponent(stateid);\r\n            }\r\n\r\n            if (registration)\r\n            {\r\n                url += \"&registration=\" + encodeURIComponent(registration);\r\n            }\r\n\r\n            if(since)\r\n            {\r\n                since = isDate(since);\r\n                if (since != null) {\r\n                    url += '&since=' + encodeURIComponent(since.toISOString());\r\n                }\r\n            }\r\n\r\n            var result = ADL.XHR_request(this.lrs, url, \"GET\", null, this.lrs.auth,\r\n                callback, null, true, null, this.withCredentials, this.strictCallbacks);\r\n\r\n            if(result === undefined || result.status == 404)\r\n            {\r\n                return null\r\n            }\r\n\r\n            try\r\n            {\r\n                return JSON.parse(result.response);\r\n            }\r\n            catch(e)\r\n            {\r\n                return result.response;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Delete activity state in the LRS\r\n     * @param {string} activityid   the id of the Activity this state is about\r\n     * @param {object} agent   the agent this Activity state is related to\r\n     * @param {string} stateid   the id you want associated with this state\r\n     * @param {string} [registration]   the registraton id associated with this state\r\n     * @param {string} [matchHash]    the hash of the state to replace or * to replace any\r\n     * @param {string} [noneMatchHash]    the hash of the current state or * to indicate no previous state\r\n     * @param {string} [callback]   function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     *            the function will be passed the XMLHttpRequest object\r\n     * @return {object} xhr response object or null if 404\r\n     * @example\r\n     * var stateval = {\"info\":\"the state info\"};\r\n     * ADL.XAPIWrapper.sendState(\"http://adlnet.gov/expapi/activities/question\",\r\n     *                           {\"mbox\":\"mailto:tom@example.com\"},\r\n     *                           \"questionstate\", null, stateval);\r\n     * ADL.XAPIWrapper.getState(\"http://adlnet.gov/expapi/activities/question\",\r\n     *                         {\"mbox\":\"mailto:tom@example.com\"}, \"questionstate\");\r\n     * >> {info: \"the state info\"}\r\n     *\r\n     * ADL.XAPIWrapper.deleteState(\"http://adlnet.gov/expapi/activities/question\",\r\n     *                         {\"mbox\":\"mailto:tom@example.com\"}, \"questionstate\");\r\n     * >> XMLHttpRequest {statusText: \"NO CONTENT\", status: 204, response: \"\", responseType: \"\", responseXML: null…}\r\n     *\r\n     * ADL.XAPIWrapper.getState(\"http://adlnet.gov/expapi/activities/question\",\r\n     *                         {\"mbox\":\"mailto:tom@example.com\"}, \"questionstate\");\r\n     * >> 404\r\n     */\r\n    XAPIWrapper.prototype.deleteState = function(activityid, agent, stateid, registration, matchHash, noneMatchHash, callback)\r\n    {\r\n        if (this.testConfig())\r\n        {\r\n            var url = this.lrs.endpoint + \"activities/state?activityId=<activity ID>&agent=<agent>&stateId=<stateid>\";\r\n\r\n            url = url.replace('<activity ID>',encodeURIComponent(activityid));\r\n            url = url.replace('<agent>',encodeURIComponent(JSON.stringify(agent)));\r\n            url = url.replace('<stateid>',encodeURIComponent(stateid));\r\n\r\n            if (registration)\r\n            {\r\n                url += \"&registration=\" + encodeURIComponent(registration);\r\n            }\r\n\r\n            var headers = null;\r\n            if(matchHash && noneMatchHash)\r\n            {\r\n                log(\"Can't have both If-Match and If-None-Match\");\r\n            }\r\n            else if (matchHash)\r\n            {\r\n                headers = {\"If-Match\":ADL.formatHash(matchHash)};\r\n            }\r\n            else if (noneMatchHash)\r\n            {\r\n                headers = {\"If-None-Match\":ADL.formatHash(noneMatchHash)};\r\n            }\r\n\r\n            var result = ADL.XHR_request(this.lrs, url, \"DELETE\", null, this.lrs.auth,\r\n                callback, null, false, headers, this.withCredentials, this.strictCallbacks);\r\n\r\n            if(result === undefined || result.status == 404)\r\n            {\r\n                return null\r\n            }\r\n\r\n            try\r\n            {\r\n                return JSON.parse(result.response);\r\n            }\r\n            catch(e)\r\n            {\r\n                return result;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Store activity profile in the LRS\r\n     * @param {string} activityid   the id of the Activity this profile is about\r\n     * @param {string} profileid   the id you want associated with this profile\r\n     * @param {string} profileval   the profile\r\n     * @param {string} [matchHash]    the hash of the profile to replace or * to replace any\r\n     * @param {string} [noneMatchHash]    the hash of the current profile or * to indicate no previous profile\r\n     * @param {string} [callback]   function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     *            the function will be passed the XMLHttpRequest object\r\n     * @return {bolean} false if no activity profile is included\r\n     * @example\r\n     * var profile = {\"info\":\"the profile\"};\r\n     * ADL.XAPIWrapper.sendActivityProfile(\"http://adlnet.gov/expapi/activities/question\",\r\n     *                                     \"actprofile\", profile, null, \"*\");\r\n     */\r\n    XAPIWrapper.prototype.sendActivityProfile = function(activityid, profileid, profileval, matchHash, noneMatchHash, callback)\r\n    {\r\n        if (this.testConfig())\r\n        {\r\n            var url = this.lrs.endpoint + \"activities/profile?activityId=<activity ID>&profileId=<profileid>\";\r\n\r\n            url = url.replace('<activity ID>',encodeURIComponent(activityid));\r\n            url = url.replace('<profileid>',encodeURIComponent(profileid));\r\n\r\n            var headers = null;\r\n            if(matchHash && noneMatchHash)\r\n            {\r\n                log(\"Can't have both If-Match and If-None-Match\");\r\n            }\r\n            else if (matchHash)\r\n            {\r\n                headers = {\"If-Match\":ADL.formatHash(matchHash)};\r\n            }\r\n            else if (noneMatchHash)\r\n            {\r\n                headers = {\"If-None-Match\":ADL.formatHash(noneMatchHash)};\r\n            }\r\n\r\n            var method = \"PUT\";\r\n            if (profileval)\r\n            {\r\n                if (profileval instanceof Array)\r\n                {\r\n                    profileval = JSON.stringify(profileval);\r\n                    headers = headers || {};\r\n                    headers[\"Content-Type\"] =\"application/json\";\r\n                }\r\n                else if (profileval instanceof Object)\r\n                {\r\n                    profileval = JSON.stringify(profileval);\r\n                    headers = headers || {};\r\n                    headers[\"Content-Type\"] =\"application/json\";\r\n                    method = \"POST\";\r\n                }\r\n                else\r\n                {\r\n                    headers = headers || {};\r\n                    headers[\"Content-Type\"] =\"application/octet-stream\";\r\n                }\r\n            }\r\n            else\r\n            {\r\n                this.log(\"No activity profile was included.\");\r\n                return false;\r\n            }\r\n\r\n            ADL.XHR_request(this.lrs, url, method, profileval, this.lrs.auth, callback,\r\n                null, false, headers, this.withCredentials, this.strictCallbacks);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get activity profile from the LRS\r\n     * @param {string} activityid   the id of the Activity this profile is about\r\n     * @param {string} [profileid]    the id of the profile, if not included, the response will be a list of profileids\r\n     *              associated with the activity\r\n     * @param {object} [since]    date object or date string telling the LRS to return objects newer than the date supplied\r\n     * @param {function [callback]    function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     *            the function will be passed the XMLHttpRequest object\r\n     * @return {object} xhr response object or null if 404\r\n     * @example\r\n     * ADL.XAPIWrapper.getActivityProfile(\"http://adlnet.gov/expapi/activities/question\",\r\n     *                                    \"actprofile\", null,\r\n     *                                    function(r){ADL.XAPIWrapper.log(JSON.parse(r.response));});\r\n     * >> {info: \"the profile\"}\r\n     */\r\n    XAPIWrapper.prototype.getActivityProfile = function(activityid, profileid, since, callback)\r\n    {\r\n        if (this.testConfig())\r\n        {\r\n            var url = this.lrs.endpoint + \"activities/profile?activityId=<activity ID>\";\r\n\r\n            url = url.replace('<activity ID>',encodeURIComponent(activityid));\r\n\r\n            if (profileid)\r\n            {\r\n                url += \"&profileId=\" + encodeURIComponent(profileid);\r\n            }\r\n\r\n            if(since)\r\n            {\r\n                since = isDate(since);\r\n                if (since != null) {\r\n                    url += '&since=' + encodeURIComponent(since.toISOString());\r\n                }\r\n            }\r\n\r\n            var result = ADL.XHR_request(this.lrs, url, \"GET\", null, this.lrs.auth,\r\n                callback, null, true, null, this.withCredentials, this.strictCallbacks);\r\n\r\n            if(result === undefined || result.status == 404)\r\n            {\r\n                return null\r\n            }\r\n\r\n            try\r\n            {\r\n                return JSON.parse(result.response);\r\n            }\r\n            catch(e)\r\n            {\r\n                return result.response;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Delete activity profile in the LRS\r\n     * @param {string} activityid   the id of the Activity this profile is about\r\n     * @param {string} profileid   the id you want associated with this profile\r\n     * @param {string} [matchHash]    the hash of the profile to replace or * to replace any\r\n     * @param {string} [noneMatchHash]    the hash of the current profile or * to indicate no previous profile\r\n     * @param {string} [callback]   function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     *            the function will be passed the XMLHttpRequest object\r\n     * @return {object} xhr response object or null if 404\r\n     * @example\r\n     * ADL.XAPIWrapper.deleteActivityProfile(\"http://adlnet.gov/expapi/activities/question\",\r\n     *                                       \"actprofile\");\r\n     * >> XMLHttpRequest {statusText: \"NO CONTENT\", status: 204, response: \"\", responseType: \"\", responseXML: null…}\r\n     */\r\n    XAPIWrapper.prototype.deleteActivityProfile = function(activityid, profileid, matchHash, noneMatchHash, callback)\r\n    {\r\n        if (this.testConfig())\r\n        {\r\n            var url = this.lrs.endpoint + \"activities/profile?activityId=<activity ID>&profileId=<profileid>\";\r\n\r\n            url = url.replace('<activity ID>',encodeURIComponent(activityid));\r\n            url = url.replace('<profileid>',encodeURIComponent(profileid));\r\n\r\n            var headers = null;\r\n            if(matchHash && noneMatchHash)\r\n            {\r\n                log(\"Can't have both If-Match and If-None-Match\");\r\n            }\r\n            else if (matchHash)\r\n            {\r\n                headers = {\"If-Match\":ADL.formatHash(matchHash)};\r\n            }\r\n            else if (noneMatchHash)\r\n            {\r\n                headers = {\"If-None-Match\":ADL.formatHash(noneMatchHash)};\r\n            }\r\n\r\n            var result = ADL.XHR_request(this.lrs, url, \"DELETE\", null, this.lrs.auth,\r\n                callback, null, false, headers,this.withCredentials, this.strictCallbacks);\r\n\r\n            if(result === undefined || result.status == 404)\r\n            {\r\n                return null\r\n            }\r\n\r\n            try\r\n            {\r\n                return JSON.parse(result.response);\r\n            }\r\n            catch(e)\r\n            {\r\n                return result;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Gets the Person object from the LRS based on an agent object.\r\n     * The Person object may contain more information about an agent.\r\n     * See the xAPI Spec for details.\r\n     * @param {object} agent   the agent object to get a Person\r\n     * @param {function [callback]    function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     *            the function will be passed the XMLHttpRequest object\r\n     * @return {object} xhr response object or null if 404\r\n     * @example\r\n     * var res = ADL.XAPIWrapper.getAgents({\"mbox\":\"mailto:tom@example.com\"});\r\n     * ADL.XAPIWrapper.log(res);\r\n     * >> <Person object>\r\n     */\r\n    XAPIWrapper.prototype.getAgents = function(agent, callback)\r\n    {\r\n        if (this.testConfig())\r\n        {\r\n            var url = this.lrs.endpoint + \"agents?agent=<agent>\";\r\n            url = url.replace('<agent>', encodeURIComponent(JSON.stringify(agent)));\r\n\r\n            var result = ADL.XHR_request(this.lrs, url, \"GET\", null, this.lrs.auth,\r\n                callback, null, true, null, this.withCredentials, this.strictCallbacks);\r\n\r\n            if(result === undefined || result.status == 404)\r\n            {\r\n                return null\r\n            }\r\n\r\n            try\r\n            {\r\n                return JSON.parse(result.response);\r\n            }\r\n            catch(e)\r\n            {\r\n                return result.response;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Store agent profile in the LRS\r\n     * @param {object} agent   the agent this profile is related to\r\n     * @param {string} profileid   the id you want associated with this profile\r\n     * @param {string} profileval   the profile\r\n     * @param {string} [matchHash]    the hash of the profile to replace or * to replace any\r\n     * @param {string} [noneMatchHash]    the hash of the current profile or * to indicate no previous profile\r\n     * @param {string} [callback]   function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     *            the function will be passed the XMLHttpRequest object\r\n     * @return {object} false if no agent profile is included\r\n     * @example\r\n     * var profile = {\"info\":\"the agent profile\"};\r\n     * ADL.XAPIWrapper.sendAgentProfile({\"mbox\":\"mailto:tom@example.com\"},\r\n     *                                   \"agentprofile\", profile, null, \"*\");\r\n     */\r\n    XAPIWrapper.prototype.sendAgentProfile = function(agent, profileid, profileval, matchHash, noneMatchHash, callback)\r\n    {\r\n        if (this.testConfig())\r\n        {\r\n            var url = this.lrs.endpoint + \"agents/profile?agent=<agent>&profileId=<profileid>\";\r\n\r\n            url = url.replace('<agent>',encodeURIComponent(JSON.stringify(agent)));\r\n            url = url.replace('<profileid>',encodeURIComponent(profileid));\r\n\r\n            var headers = null;\r\n            if(matchHash && noneMatchHash)\r\n            {\r\n                log(\"Can't have both If-Match and If-None-Match\");\r\n            }\r\n            else if (matchHash)\r\n            {\r\n                headers = {\"If-Match\":ADL.formatHash(matchHash)};\r\n            }\r\n            else if (noneMatchHash)\r\n            {\r\n                headers = {\"If-None-Match\":ADL.formatHash(noneMatchHash)};\r\n            }\r\n\r\n            var method = \"PUT\";\r\n            if (profileval)\r\n            {\r\n                if (profileval instanceof Array)\r\n                {\r\n                    profileval = JSON.stringify(profileval);\r\n                    headers = headers || {};\r\n                    headers[\"Content-Type\"] =\"application/json\";\r\n                }\r\n                else if (profileval instanceof Object)\r\n                {\r\n                    profileval = JSON.stringify(profileval);\r\n                    headers = headers || {};\r\n                    headers[\"Content-Type\"] =\"application/json\";\r\n                    method = \"POST\";\r\n                }\r\n                else\r\n                {\r\n                    headers = headers || {};\r\n                    headers[\"Content-Type\"] =\"application/octet-stream\";\r\n                }\r\n            }\r\n            else\r\n            {\r\n                this.log(\"No agent profile was included.\");\r\n                return false;\r\n            }\r\n\r\n            ADL.XHR_request(this.lrs, url, method, profileval, this.lrs.auth, callback,\r\n                null, false, headers, this.withCredentials, this.strictCallbacks);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get agnet profile from the LRS\r\n     * @param {object} agent   the agent associated with this profile\r\n     * @param {string} [profileid]    the id of the profile, if not included, the response will be a list of profileids\r\n     *              associated with the agent\r\n     * @param {object} [since]    date object or date string telling the LRS to return objects newer than the date supplied\r\n     * @param {function} [callback]   function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     *            the function will be passed the XMLHttpRequest object\r\n     * @return {object} xhr response object or null if 404\r\n     * @example\r\n     * ADL.XAPIWrapper.getAgentProfile({\"mbox\":\"mailto:tom@example.com\"},\r\n     *                                  \"agentprofile\", null,\r\n     *                                  function(r){ADL.XAPIWrapper.log(JSON.parse(r.response));});\r\n     * >> {info: \"the agent profile\"}\r\n     */\r\n    XAPIWrapper.prototype.getAgentProfile = function(agent, profileid, since, callback)\r\n    {\r\n        if (this.testConfig()){\r\n            var url = this.lrs.endpoint + \"agents/profile?agent=<agent>\";\r\n\r\n            url = url.replace('<agent>',encodeURIComponent(JSON.stringify(agent)));\r\n            url = url.replace('<profileid>',encodeURIComponent(profileid));\r\n\r\n            if (profileid)\r\n            {\r\n                url += \"&profileId=\" + encodeURIComponent(profileid);\r\n            }\r\n\r\n            if(since)\r\n            {\r\n                since = isDate(since);\r\n                if (since != null) {\r\n                    url += '&since=' + encodeURIComponent(since.toISOString());\r\n                }\r\n            }\r\n\r\n            var result = ADL.XHR_request(this.lrs, url, \"GET\", null, this.lrs.auth,\r\n                callback, null, true, null, this.withCredentials, this.strictCallbacks);\r\n\r\n            if(result === undefined || result.status == 404)\r\n            {\r\n                return null\r\n            }\r\n\r\n            try\r\n            {\r\n                return JSON.parse(result.response);\r\n            }\r\n            catch(e)\r\n            {\r\n                return result.response;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Delete agent profile in the LRS\r\n     * @param {oject} agent   the id of the Agent this profile is about\r\n     * @param {string} profileid   the id you want associated with this profile\r\n     * @param {string} [matchHash]    the hash of the profile to replace or * to replace any\r\n     * @param {string} [noneMatchHash]    the hash of the current profile or * to indicate no previous profile\r\n     * @param {string} [callback]   function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     *            the function will be passed the XMLHttpRequest object\r\n     * @return {object} xhr response object or null if 404\r\n     * @example\r\n     * ADL.XAPIWrapper.deleteAgentProfile({\"mbox\":\"mailto:tom@example.com\"},\r\n     *                                     \"agentprofile\");\r\n     * >> XMLHttpRequest {statusText: \"NO CONTENT\", status: 204, response: \"\", responseType: \"\", responseXML: null…}\r\n     */\r\n    XAPIWrapper.prototype.deleteAgentProfile = function(agent, profileid, matchHash, noneMatchHash, callback)\r\n    {\r\n        if (this.testConfig())\r\n        {\r\n            var url = this.lrs.endpoint + \"agents/profile?agent=<agent>&profileId=<profileid>\";\r\n\r\n            url = url.replace('<agent>',encodeURIComponent(JSON.stringify(agent)));\r\n            url = url.replace('<profileid>',encodeURIComponent(profileid));\r\n\r\n            var headers = null;\r\n            if(matchHash && noneMatchHash)\r\n            {\r\n                log(\"Can't have both If-Match and If-None-Match\");\r\n            }\r\n            else if (matchHash)\r\n            {\r\n                headers = {\"If-Match\":ADL.formatHash(matchHash)};\r\n            }\r\n            else if (noneMatchHash)\r\n            {\r\n                headers = {\"If-None-Match\":ADL.formatHash(noneMatchHash)};\r\n            }\r\n\r\n            var result = ADL.XHR_request(this.lrs, url, \"DELETE\", null, this.lrs.auth,\r\n                callback, null, false, headers, this.withCredentials, this.strictCallbacks);\r\n\r\n            if(result === undefined || result.status == 404)\r\n            {\r\n                return null\r\n            }\r\n\r\n            try\r\n            {\r\n                return JSON.parse(result.response);\r\n            }\r\n            catch(e)\r\n            {\r\n                return result;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Tests the configuration of the lrs object\r\n     */\r\n    function testConfig()\r\n    {\r\n        try\r\n        {\r\n            return this.lrs.endpoint != undefined && this.lrs.endpoint != \"\";\r\n        }\r\n        catch(e)\r\n        {\r\n            return false\r\n        }\r\n    }\r\n\r\n    // outputs the message to the console if available\r\n    function log(message)\r\n    {\r\n        if (!log.debug) return false;\r\n        try\r\n        {\r\n            console.log(message);\r\n            return true;\r\n        }\r\n        catch(e){return false;}\r\n    }\r\n\r\n    // merges two object\r\n    function mergeRecursive(obj1, obj2)\r\n    {\r\n        for (var p in obj2)\r\n        {\r\n            if (obj2.hasOwnProperty(p) == false)\r\n                continue;\r\n\r\n            var prop = obj2[p];\r\n            log(p + \" : \" + prop);\r\n            try\r\n            {\r\n                // Property in destination object set; update its value.\r\n                if ( obj2[p].constructor==Object )\r\n                {\r\n                    obj1[p] = mergeRecursive(obj1[p], obj2[p]);\r\n\r\n                }\r\n                else\r\n                {\r\n                  if (obj1 == undefined)\r\n                  {\r\n                    obj1 = new Object();\r\n                  }\r\n                    obj1[p] = obj2[p];\r\n                }\r\n            }\r\n            catch(e)\r\n            {\r\n              if (obj1 == undefined)\r\n              {\r\n                obj1 = new Object();\r\n              }\r\n              // Property in destination object not set; create it and set its value.\r\n              obj1[p] = obj2[p];\r\n            }\r\n        }\r\n\r\n        return obj1;\r\n    }\r\n\r\n    // iniitializes an lrs object with settings from\r\n    // a config file and from the url query string\r\n    function getLRSObject(config)\r\n    {\r\n        var lrsProps = [\"endpoint\",\"auth\",\"actor\",\"registration\",\"activity_id\", \"grouping\", \"activity_platform\"];\r\n        var lrs = new Object();\r\n        var qsVars, prop;\r\n\r\n        qsVars = parseQueryString();\r\n        if (qsVars !== undefined && Object.keys(qsVars).length !== 0) {\r\n            for (var i = 0; i<lrsProps.length; i++){\r\n                prop = lrsProps[i];\r\n                if (qsVars[prop]){\r\n                    lrs[prop] = qsVars[prop];\r\n                    delete qsVars[prop];\r\n                }\r\n            }\r\n            if (Object.keys(qsVars).length !== 0) {\r\n              lrs.extended = qsVars;\r\n            }\r\n\r\n            lrs = mergeRecursive(config, lrs);\r\n        }\r\n        else {\r\n            lrs = config;\r\n        }\r\n\r\n        return lrs;\r\n    }\r\n\r\n    // parses the params in the url query string\r\n    function parseQueryString()\r\n    {\r\n        var qs, pairs, pair, ii, parsed;\r\n\r\n        qs = location.search.substr(1);\r\n\r\n        pairs = qs.split('&');\r\n        parsed = {};\r\n        for ( ii = 0; ii < pairs.length; ii++) {\r\n            pair = pairs[ii].split('=');\r\n            if (pair.length === 2 && pair[0]) {\r\n                parsed[pair[0]] = decodeURIComponent(pair[1]);\r\n            }\r\n        }\r\n\r\n        return parsed;\r\n    }\r\n\r\n\r\n    function delay()\r\n    {\r\n        var xhr = new XMLHttpRequest();\r\n        var url = location + '?forcenocache='+ADL.ruuid();\r\n        xhr.open('GET', url, false);\r\n        xhr.send(null);\r\n    }\r\n\r\n    var isNode = Boolean(!root.document);\r\n\r\n    // Node shim for browser location\r\n    var location = isNode ?\r\n        // Node\r\n        {\r\n            search: \"\",\r\n            protocol: \"https:\"\r\n        } :\r\n        // Browser\r\n        root.location;\r\n    /**\r\n     * Cross environment implementation of a url parser\r\n     * @param  {string} url  Url to parse\r\n     * @return {object}  Parsed url\r\n     */\r\n    function parseUrl(url) {\r\n        // Node\r\n        if (isNode) return require(\"url\").parse(url);\r\n\r\n        // Brower\r\n        var a = document.createElement(\"a\");\r\n        a.href = url;\r\n        return a;\r\n    }\r\n\r\n    // If in node, create a loose SHIM for XMLHttpRequest API\r\n    var XMLHttpRequest = root.XMLHttpRequest;\r\n    isNode && (function() {\r\n        XMLHttpRequest = function XMLHttpRequest() {\r\n            this.method = \"GET\";\r\n            this.url = null;\r\n            this.async = true;\r\n            this.headers = {};\r\n        };\r\n        XMLHttpRequest.prototype = {\r\n\r\n            open: function(method, url, async)\r\n            {\r\n\r\n                if (async === false) {\r\n                    throw \"ADL xAPIWrapper does not support synchronous http requests in node\";\r\n                }\r\n\r\n                this.method = method;\r\n                this.url = url;\r\n                this.withCredentials = true;\r\n                this.crossDomain = true;\r\n                this.responseText = \"\";\r\n                this.responseJSON = null;\r\n                this.readyState = 0;\r\n                this.status = 0;\r\n                this.onreadystatechange = function() {};\r\n                this.onerror = function(error) {};\r\n                this.onload = function() {};\r\n            },\r\n\r\n            setRequestHeader: function(name, value)\r\n            {\r\n                this.headers[name] = value;\r\n            },\r\n\r\n            send: function(data)\r\n            {\r\n                var http = this.url.includes(\"https:\") ? require('https') : require(\"http\");\r\n                var options = {\r\n                    method: this.method,\r\n                    headers: this.headers\r\n                };\r\n                var parsedUrl = parseUrl(this.url);\r\n                for (var k in parsedUrl) {\r\n                    options[k] = parsedUrl[k];\r\n                }\r\n                var req = http.request(options, function (res) {\r\n                    res.setEncoding('utf8');\r\n                    this.status = res.statusCode;\r\n                    res.on('data', function (d) {\r\n                        this.responseText+=d;\r\n                    }.bind(this));\r\n                    res.on('end', function () {\r\n                        this.readyState = 4;\r\n                        try {\r\n                            this.responseJSON = JSON.parse(this.responseText);\r\n                        } catch(error) {\r\n                            this.responseJSON = null;\r\n                        }\r\n                        this.onload();\r\n                    }.bind(this));\r\n                }.bind(this));\r\n                req.on('error', function (e) {\r\n                    this.readyState = 4;\r\n                    this.onerror();\r\n                }.bind(this));\r\n                req.end(data);\r\n            }\r\n\r\n        };\r\n\r\n     })();\r\n    /**\r\n     * formats a request in a way that IE will allow\r\n     * @param {string} method   the http request method (ex: \"PUT\", \"GET\")\r\n     * @param {string} url   the url to the request (ex: ADL.XAPIWrapper.lrs.endpoint + \"statements\")\r\n     * @param {array} [headers]   headers to include in the request\r\n     * @param {string} [data]   the body of the request, if there is one\r\n     * @return {object} xhr response object\r\n     */\r\n    function ie_request(method, url, headers, data)\r\n    {\r\n        var newUrl = url;\r\n\r\n        //Everything that was on query string goes into form vars\r\n        var formData = new Array();\r\n        var qsIndex = newUrl.indexOf('?');\r\n        if(qsIndex > 0){\r\n            formData.push(newUrl.substr(qsIndex+1));\r\n            newUrl = newUrl.substr(0, qsIndex);\r\n        }\r\n\r\n        //Method has to go on querystring, and nothing else\r\n        newUrl = newUrl + '?method=' + method;\r\n\r\n        //Headers\r\n        if(headers !== null){\r\n            for (var headerName in headers) {\r\n                if (headers.hasOwnProperty(headerName))\r\n                    formData.push(headerName + \"=\" + encodeURIComponent(headers[headerName]));\r\n            }\r\n        }\r\n\r\n        //The original data is repackaged as \"content\" form var\r\n        if(data !== null){\r\n            formData.push('content=' + encodeURIComponent(data));\r\n        }\r\n\r\n        return {\r\n            \"method\":\"POST\",\r\n            \"url\":newUrl,\r\n            \"headers\":{},\r\n            \"data\":formData.join(\"&\")\r\n        };\r\n    }\r\n\r\n    /*!\r\n    Excerpt from: Math.uuid.js (v1.4)\r\n    http://www.broofa.com\r\n    mailto:robert@broofa.com\r\n    Copyright (c) 2010 Robert Kieffer\r\n    Dual licensed under the MIT and GPL licenses.\r\n    */\r\n    ADL.ruuid = function()\r\n    {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n                var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\r\n                return v.toString(16);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * dateFromISOString\r\n     * parses an ISO string into a date object\r\n     * isostr - the ISO string\r\n     */\r\n    ADL.dateFromISOString = function(isostr)\r\n    {\r\n        var regexp = \"([0-9]{4})(-([0-9]{2})(-([0-9]{2})\" +\r\n            \"([T| ]([0-9]{2}):([0-9]{2})(:([0-9]{2})(\\.([0-9]+))?)?\" +\r\n            \"(Z|(([-+])([0-9]{2}):([0-9]{2})))?)?)?)?\";\r\n        var d = isostr.match(new RegExp(regexp));\r\n\r\n        var offset = 0;\r\n        var date = new Date(d[1], 0, 1);\r\n\r\n        if (d[3]) { date.setMonth(d[3] - 1); }\r\n        if (d[5]) { date.setDate(d[5]); }\r\n        if (d[7]) { date.setHours(d[7]); }\r\n        if (d[8]) { date.setMinutes(d[8]); }\r\n        if (d[10]) { date.setSeconds(d[10]); }\r\n        if (d[12]) { date.setMilliseconds(Number(\"0.\" + d[12]) * 1000); }\r\n        if (d[14]) {\r\n            offset = (Number(d[16]) * 60) + Number(d[17]);\r\n            offset *= ((d[15] == '-') ? 1 : -1);\r\n        }\r\n\r\n        offset -= date.getTimezoneOffset();\r\n        time = (Number(date) + (offset * 60 * 1000));\r\n\r\n        var dateToReturn = new Date();\r\n        dateToReturn.setTime(Number(time));\r\n        return dateToReturn;\r\n    };\r\n\r\n    // Synchronous if callback is not provided (not recommended)\r\n    /**\r\n     * makes a request to a server (if possible, use functions provided in XAPIWrapper)\r\n     * @param {string} lrs   the lrs connection info, such as endpoint, auth, etc\r\n     * @param {string} url   the url of this request\r\n     * @param {string} method   the http request method\r\n     * @param {string} data   the payload\r\n     * @param {string} auth   the value for the Authorization header\r\n     * @param {function} callback   function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     * @param {object} [callbackargs]   additional javascript object to be passed to the callback function\r\n     * @param {boolean} ignore404    allow page not found errors to pass\r\n     * @param {object} extraHeaders   other header key-values to be added to this request\r\n     * @param {boolean} withCredentials\r\n     * @param {boolean} strictCallbacks Callback must be executed and first param is error or null if no error\r\n     * @return {object} xhr response object\r\n     */\r\n    ADL.XHR_request = function(lrs, url, method, data, auth, callback, callbackargs, ignore404, extraHeaders, withCredentials, strictCallbacks)\r\n    {\r\n        \"use strict\";\r\n\r\n        var xhr,\r\n            finished = false,\r\n            xDomainRequest = false,\r\n            ieXDomain = false,\r\n            ieModeRequest,\r\n            urlparts = url.toLowerCase().match(/^(.+):\\/\\/([^:\\/]*):?(\\d+)?(\\/.*)?$/),\r\n            urlPort,\r\n            result,\r\n            extended,\r\n            prop,\r\n            until;\r\n\r\n        //Consolidate headers\r\n        var headers = {};\r\n        headers[\"Content-Type\"] = \"application/json\";\r\n        headers[\"Authorization\"] = auth;\r\n        headers['X-Experience-API-Version'] = ADL.XAPIWrapper.xapiVersion;\r\n        if(extraHeaders !== null){\r\n            for (var headerName in extraHeaders) {\r\n                if (extraHeaders.hasOwnProperty(headerName))\r\n                    headers[headerName] = extraHeaders[headerName];\r\n            }\r\n        }\r\n\r\n        //See if this really is a cross domain\r\n        xDomainRequest = (location.protocol.toLowerCase() !== urlparts[1] || location.hostname.toLowerCase() !== urlparts[2]);\r\n        if (!xDomainRequest) {\r\n            urlPort = (urlparts[3] === null ? ( urlparts[1] === 'http' ? '80' : '443') : urlparts[3]);\r\n            xDomainRequest = (urlPort === location.port);\r\n        }\r\n\r\n        //Add extended LMS-specified values to the URL\r\n        if (lrs !== null && lrs.extended !== undefined) {\r\n            extended = new Array();\r\n            for (prop in lrs.extended) {\r\n                extended.push(prop + \"=\" + encodeURIComponent(lrs.extended[prop]));\r\n            }\r\n            if (extended.length > 0) {\r\n                url += (url.indexOf(\"?\") > -1 ? \"&\" : \"?\") + extended.join(\"&\");\r\n            }\r\n        }\r\n\r\n        //If it's not cross domain or we're not using IE, use the usual XmlHttpRequest\r\n        var windowsVersionCheck = root.XDomainRequest && (root.XMLHttpRequest && new XMLHttpRequest().responseType === undefined);\r\n        if (!xDomainRequest || windowsVersionCheck === undefined || windowsVersionCheck===false) {\r\n            xhr = new XMLHttpRequest();\r\n            xhr.withCredentials = withCredentials; //allow cross domain cookie based auth\r\n            xhr.open(method, url, callback != null);\r\n            for(var headerName in headers){\r\n                xhr.setRequestHeader(headerName, headers[headerName]);\r\n            }\r\n        }\r\n        //Otherwise, use IE's XDomainRequest object\r\n        else {\r\n            ieXDomain = true;\r\n            ieModeRequest = ie_request(method, url, headers, data);\r\n            xhr = new XDomainRequest();\r\n            xhr.open(ieModeRequest.method, ieModeRequest.url);\r\n        }\r\n\r\n        //Setup request callback\r\n        function requestComplete() {\r\n            if(!finished){\r\n                // may be in sync or async mode, using XMLHttpRequest or IE XDomainRequest, onreadystatechange or\r\n                // onload or both might fire depending upon browser, just covering all bases with event hooks and\r\n                // using 'finished' flag to avoid triggering events multiple times\r\n                finished = true;\r\n                var notFoundOk = (ignore404 && xhr.status === 404);\r\n                if (xhr.status === undefined || (xhr.status >= 200 && xhr.status < 400) || notFoundOk) {\r\n                    if (callback) {\r\n                        if(callbackargs){\r\n                            strictCallbacks ? callback(null, xhr, callbackargs) : callback(xhr, callbackargs);\r\n                        }\r\n                        else {\r\n                          var body;\r\n\r\n                            try {\r\n                                body = JSON.parse(xhr.responseText);\r\n                            }\r\n                            catch(e){\r\n                                body = xhr.responseText;\r\n                            }\r\n\r\n                          strictCallbacks ? callback(null, xhr, body) : callback(xhr,body);\r\n                        }\r\n                    } else {\r\n                        result = xhr;\r\n                        return xhr;\r\n                    }\r\n                } else {\r\n                    var warning;\r\n                    try {\r\n                        warning = \"There was a problem communicating with the Learning Record Store. ( \"\r\n                            + xhr.status + \" | \" + xhr.response+ \" )\" + url\r\n                    } catch (ex) {\r\n                        warning = ex.toString();\r\n                    }\r\n                    ADL.XAPIWrapper.log(warning);\r\n                    ADL.xhrRequestOnError(xhr, method, url, callback, callbackargs, strictCallbacks);\r\n                    result = xhr;\r\n                    return xhr;\r\n                }\r\n            } else {\r\n                return result;\r\n            }\r\n        };\r\n\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState === 4) {\r\n               return requestComplete();\r\n            }\r\n        };\r\n\r\n        xhr.onload = requestComplete;\r\n        xhr.onerror = requestComplete;\r\n        //xhr.onerror =  ADL.xhrRequestOnError(xhr, method, url);\r\n\r\n        xhr.send(ieXDomain ? ieModeRequest.data : data);\r\n\r\n        if (!callback) {\r\n            // synchronous\r\n            if (ieXDomain) {\r\n                // synchronous call in IE, with no asynchronous mode available.\r\n                until = 1000 + new Date();\r\n                while (new Date() < until && xhr.readyState !== 4 && !finished) {\r\n                    delay();\r\n                }\r\n            }\r\n            return requestComplete();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Holder for custom global error callback\r\n     * @param {object} xhr   xhr object or null\r\n     * @param {string} method   XMLHttpRequest request method\r\n     * @param {string} url   full endpoint url\r\n     * @param {function} callback   function to be called after the LRS responds\r\n     *            to this request (makes the call asynchronous)\r\n     * @param {object} [callbackargs]   additional javascript object to be passed to the callback function\r\n     * @param {boolean} strictCallbacks Callback must be executed and first param is error or null if no error\r\n     * @example\r\n     * ADL.xhrRequestOnError = function(xhr, method, url, callback, callbackargs) {\r\n     *   console.log(xhr);\r\n     *   alert(xhr.status + \" \" + xhr.statusText + \": \" + xhr.response);\r\n     * };\r\n     */\r\n    ADL.xhrRequestOnError = function(xhr, method, url, callback, callbackargs, strictCallbacks){\r\n        if (callback && strictCallbacks) {\r\n            var status = xhr ? xhr.status : undefined;\r\n            var error;\r\n            if (status) {\r\n                error = new Error('Request error: ' + xhr.status);\r\n            } else if (status === 0 || status === null) { // 0 and null = aborted\r\n                error = new Error('Request error: aborted');\r\n            } else {\r\n                error = new Error('Reqeust error: unknown');\r\n            }\r\n\r\n            if (callbackargs) {\r\n                callback(error, xhr, callbackargs);\r\n            } else {\r\n              var body;\r\n\r\n                try {\r\n                    body = JSON.parse(xhr.responseText);\r\n                } catch(e){\r\n                    body = xhr.responseText;\r\n                }\r\n\r\n              callback(error, xhr, body);\r\n            }\r\n        }\r\n    };\r\n\r\n    ADL.formatHash = function(hash)\r\n    {\r\n      return (hash===\"*\") ? hash : '\"'+hash+'\"';\r\n    }\r\n\r\n    ADL.XAPIWrapper = new XAPIWrapper(Config, false);\r\n\r","(function(root) {\r\n\r\n  if (typeof TextDecoder === \"undefined\") {\r\n    function TextEncoder(encoding) {\r\n      if (encoding !== 'utf8') throw 'TextDecoder only supports utf8';\r\n    }\r\n    TextEncoder.prototype.encode = function (string) {\r\n      var octets = [];\r\n      var length = string.length;\r\n      var i = 0;\r\n      while (i < length) {\r\n        var codePoint = string.codePointAt(i);\r\n        var c = 0;\r\n        var bits = 0;\r\n        if (codePoint <= 0x0000007F) {\r\n          c = 0;\r\n          bits = 0x00;\r\n        } else if (codePoint <= 0x000007FF) {\r\n          c = 6;\r\n          bits = 0xC0;\r\n        } else if (codePoint <= 0x0000FFFF) {\r\n          c = 12;\r\n          bits = 0xE0;\r\n        } else if (codePoint <= 0x001FFFFF) {\r\n          c = 18;\r\n          bits = 0xF0;\r\n        }\r\n        octets.push(bits | (codePoint >> c));\r\n        c -= 6;\r\n        while (c >= 0) {\r\n          octets.push(0x80 | ((codePoint >> c) & 0x3F));\r\n          c -= 6;\r\n        }\r\n        i += codePoint >= 0x10000 ? 2 : 1;\r\n      }\r\n      return octets;\r\n    };\r\n    root.TextEncoder = TextEncoder;\r\n  }\r\n\r\n  if (typeof TextDecoder === \"undefined\") {\r\n    function TextDecoder(encoding) {\r\n      if (encoding !== 'utf8') throw 'TextDecoder only supports utf8';\r\n    }\r\n    TextDecoder.prototype.decode = function (octets) {\r\n      var string = \"\";\r\n      var i = 0;\r\n      while (i < octets.length) {\r\n        var octet = octets[i];\r\n        var bytesNeeded = 0;\r\n        var codePoint = 0;\r\n        if (octet <= 0x7F) {\r\n          bytesNeeded = 0;\r\n          codePoint = octet & 0xFF;\r\n        } else if (octet <= 0xDF) {\r\n          bytesNeeded = 1;\r\n          codePoint = octet & 0x1F;\r\n        } else if (octet <= 0xEF) {\r\n          bytesNeeded = 2;\r\n          codePoint = octet & 0x0F;\r\n        } else if (octet <= 0xF4) {\r\n          bytesNeeded = 3;\r\n          codePoint = octet & 0x07;\r\n        }\r\n        if (octets.length - i - bytesNeeded > 0) {\r\n          var k = 0;\r\n          while (k < bytesNeeded) {\r\n            octet = octets[i + k + 1];\r\n            codePoint = (codePoint << 6) | (octet & 0x3F);\r\n            k += 1;\r\n          }\r\n        } else {\r\n          codePoint = 0xFFFD;\r\n          bytesNeeded = octets.length - i;\r\n        }\r\n        string += String.fromCodePoint(codePoint);\r\n        i += bytesNeeded + 1;\r\n      }\r\n      return string\r\n    };\r\n    root.TextDecoder = TextDecoder;\r\n  }\r\n\r\n})(this);\r\n","   ADL.activityTypes = {\r\n      \"assessment\": \"http://adlnet.gov/expapi/activities/assessment\",\r\n      \"attempt\": \"http://adlnet.gov/expapi/activities/attempt\",\r\n      \"course\": \"http://adlnet.gov/expapi/activities/course\",\r\n      \"file\": \"http://adlnet.gov/expapi/activities/file\",\r\n      \"interaction\": \"http://adlnet.gov/expapi/activities/interaction\",\r\n      \"lesson\": \"http://adlnet.gov/expapi/activities/lesson\",\r\n      \"link\": \"http://adlnet.gov/expapi/activities/link\",\r\n      \"media\": \"http://adlnet.gov/expapi/activities/media\",\r\n      \"meeting\": \"http://adlnet.gov/expapi/activities/meeting\",\r\n      \"module\": \"http://adlnet.gov/expapi/activities/module\",\r\n      \"objective\": \"http://adlnet.gov/expapi/activities/objective\",\r\n      \"performance\": \"http://adlnet.gov/expapi/activities/performance\",\r\n      \"profile\": \"http://adlnet.gov/expapi/activities/profile\",\r\n      \"question\": \"http://adlnet.gov/expapi/activities/question\",\r\n      \"simulation\": \"http://adlnet.gov/expapi/activities/simulation\"\r\n   };\r","   ADL.verbs = {\r\n      \"abandoned\" : {\r\n         \"id\" : \"https://w3id.org/xapi/adl/verbs/abandoned\",\r\n         \"display\" : {\"en-US\" : \"abandoned\"}\r\n      },\r\n      \"answered\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/answered\",\r\n         \"display\" : {\"de-DE\" : \"beantwortete\",\r\n                      \"en-US\" : \"answered\",\r\n                      \"fr-FR\" : \"a répondu\",\r\n                      \"es-ES\" : \"contestó\",\r\n                      \"ar-AR\" : \"أجاب\"}\r\n      },\r\n      \"asked\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/asked\",\r\n         \"display\" : {\"de-DE\" : \"fragte\",\r\n                      \"en-US\" : \"asked\",\r\n                      \"fr-FR\" : \"a demandé\",\r\n                      \"es-ES\" : \"preguntó\",\r\n                      \"ar-AR\" : \"طلب\"}\r\n      },\r\n      \"attempted\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/attempted\",\r\n         \"display\" : {\"de-DE\" : \"versuchte\",\r\n                      \"en-US\" : \"attempted\",\r\n                      \"fr-FR\" : \"a essayé\",\r\n                      \"es-ES\" : \"intentó\",\r\n                      \"ar-AR\" : \"حاول\"}\r\n      },\r\n      \"attended\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/attended\",\r\n         \"display\" : {\"de-DE\" : \"nahm teil an\",\r\n                      \"en-US\" : \"attended\",\r\n                      \"fr-FR\" : \"a suivi\",\r\n                      \"es-ES\" : \"asistió\",\r\n                      \"ar-AR\" : \"حضر\"}\r\n      },\r\n      \"commented\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/commented\",\r\n         \"display\" : {\"de-DE\" : \"kommentierte\",\r\n                      \"en-US\" : \"commented\",\r\n                      \"fr-FR\" : \"a commenté\",\r\n                      \"es-ES\" : \"comentó\",\r\n                      \"ar-AR\" : \"علق\"}\r\n      },\r\n      \"completed\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/completed\",\r\n         \"display\" : {\"de-DE\" : \"beendete\",\r\n                      \"en-US\" : \"completed\",\r\n                      \"fr-FR\" : \"a terminé\",\r\n                      \"es-ES\" : \"completó\",\r\n                      \"ar-AR\" : \"أكمل\"}\r\n      },\r\n      \"exited\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/exited\",\r\n         \"display\" : {\"de-DE\" : \"verließ\",\r\n                      \"en-US\" : \"exited\",\r\n                      \"fr-FR\" : \"a quitté\",\r\n                      \"es-ES\" : \"salió\",\r\n                      \"ar-AR\" : \"خرج\"}\r\n      },\r\n      \"experienced\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/experienced\",\r\n         \"display\" : {\"de-DE\" : \"erlebte\",\r\n                      \"en-US\" : \"experienced\",\r\n                      \"fr-FR\" : \"a éprouvé\",\r\n                      \"es-ES\" : \"experimentó\",\r\n                      \"ar-AR\" : \"شاهد\"}\r\n      },\r\n      \"failed\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/failed\",\r\n         \"display\" : {\"de-DE\" : \"verfehlte\",\r\n                      \"en-US\" : \"failed\",\r\n                      \"fr-FR\" : \"a échoué\",\r\n                      \"es-ES\" : \"fracasó\",\r\n                      \"ar-AR\" : \"فشل\"}\r\n      },\r\n      \"imported\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/imported\",\r\n         \"display\" : {\"de-DE\" : \"importierte\",\r\n                      \"en-US\" : \"imported\",\r\n                      \"fr-FR\" : \"a importé\",\r\n                      \"es-ES\" : \"importó\",\r\n                      \"ar-AR\" : \"مستورد\"}\r\n      },\r\n      \"initialized\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/initialized\",\r\n         \"display\" : {\"de-DE\" : \"initialisierte\",\r\n                      \"en-US\" : \"initialized\",\r\n                      \"fr-FR\" : \"a initialisé\",\r\n                      \"es-ES\" : \"inicializó\",\r\n                      \"ar-AR\" : \"بدأ\"}\r\n      },\r\n      \"interacted\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/interacted\",\r\n         \"display\" : {\"de-DE\" : \"interagierte\",\r\n                      \"en-US\" : \"interacted\",\r\n                      \"fr-FR\" : \"a interagi\",\r\n                      \"es-ES\" : \"interactuó\",\r\n                      \"ar-AR\" : \"تفاعل\"}\r\n      },\r\n      \"launched\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/launched\",\r\n         \"display\" : {\"de-DE\" : \"startete\",\r\n                      \"en-US\" : \"launched\",\r\n                      \"fr-FR\" : \"a lancé\",\r\n                      \"es-ES\" : \"lanzó\",\r\n                      \"ar-AR\" : \"أطلق\"}\r\n      },\r\n      \"mastered\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/mastered\",\r\n         \"display\" : {\"de-DE\" : \"meisterte\",\r\n                      \"en-US\" : \"mastered\",\r\n                      \"fr-FR\" : \"a maîtrisé\",\r\n                      \"es-ES\" : \"dominó\",\r\n                      \"ar-AR\" : \"أتقن\"}\r\n      },\r\n      \"passed\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/passed\",\r\n         \"display\" : {\"de-DE\" : \"bestand\",\r\n                      \"en-US\" : \"passed\",\r\n                      \"fr-FR\" : \"a réussi\",\r\n                      \"es-ES\" : \"aprobó\",\r\n                      \"ar-AR\" : \"نجح\"}\r\n      },\r\n      \"preferred\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/preferred\",\r\n         \"display\" : {\"de-DE\" : \"bevorzugte\",\r\n                      \"en-US\" : \"preferred\",\r\n                      \"fr-FR\" : \"a préféré\",\r\n                      \"es-ES\" : \"prefirió\",\r\n                      \"ar-AR\" : \"فضل\"}\r\n      },\r\n      \"progressed\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/progressed\",\r\n         \"display\" : {\"de-DE\" : \"machte Fortschritt mit\",\r\n                      \"en-US\" : \"progressed\",\r\n                      \"fr-FR\" : \"a progressé\",\r\n                      \"es-ES\" : \"progresó\",\r\n                      \"ar-AR\" : \"تقدم\"}\r\n      },\r\n      \"registered\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/registered\",\r\n         \"display\" : {\"de-DE\" : \"registrierte\",\r\n                      \"en-US\" : \"registered\",\r\n                      \"fr-FR\" : \"a enregistré\",\r\n                      \"es-ES\" : \"registró\",\r\n                      \"ar-AR\" : \"سجل\"}\r\n      },\r\n      \"responded\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/responded\",\r\n         \"display\" : {\"de-DE\" : \"reagierte\",\r\n                      \"en-US\" : \"responded\",\r\n                      \"fr-FR\" : \"a répondu\",\r\n                      \"es-ES\" : \"respondió\",\r\n                      \"ar-AR\" : \"استجاب\"}\r\n      },\r\n      \"resumed\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/resumed\",\r\n         \"display\" : {\"de-DE\" : \"setzte fort\",\r\n                      \"en-US\" : \"resumed\",\r\n                      \"fr-FR\" : \"a repris\",\r\n                      \"es-ES\" : \"continuó\",\r\n                      \"ar-AR\" : \"استأنف\"}\r\n      },\r\n      \"satisfied\" : {\r\n         \"id\" : \"https://w3id.org/xapi/adl/verbs/satisfied\",\r\n         \"display\" : {\"de-DE\" : \"befriedigt\",\r\n                      \"en-US\" : \"satisfied\",\r\n                      \"fr-FR\" : \"satisfaite\",\r\n                      \"es-ES\" : \"satisfecho\",\r\n                      \"ar-AR\" : \"راض\"}\r\n      },\r\n      \"scored\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/scored\",\r\n         \"display\" : {\"de-DE\" : \"erreichte\",\r\n                      \"en-US\" : \"scored\",\r\n                      \"fr-FR\" : \"a marqué\",\r\n                      \"es-ES\" : \"anotó\",\r\n                      \"ar-AR\" : \"سحل النقاط\"}\r\n      },\r\n      \"shared\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/shared\",\r\n         \"display\" : {\"de-DE\" : \"teilte\",\r\n                      \"en-US\" : \"shared\",\r\n                      \"fr-FR\" : \"a partagé\",\r\n                      \"es-ES\" : \"compartió\",\r\n                      \"ar-AR\" : \"شارك\"}\r\n      },\r\n      \"suspended\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/suspended\",\r\n         \"display\" : {\"de-DE\" : \"pausierte\",\r\n                      \"en-US\" : \"suspended\",\r\n                      \"fr-FR\" : \"a suspendu\",\r\n                      \"es-ES\" : \"aplazó\",\r\n                      \"ar-AR\" : \"علق\"}\r\n      },\r\n      \"terminated\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/terminated\",\r\n         \"display\" : {\"de-DE\" : \"beendete\",\r\n                      \"en-US\" : \"terminated\",\r\n                      \"fr-FR\" : \"a terminé\",\r\n                      \"es-ES\" : \"terminó\",\r\n                      \"ar-AR\" : \"أنهى\"}\r\n      },\r\n      \"voided\" : {\r\n         \"id\" : \"http://adlnet.gov/expapi/verbs/voided\",\r\n         \"display\" : {\"de-DE\" : \"entwertete\",\r\n                      \"en-US\" : \"voided\",\r\n                      \"fr-FR\" : \"a annulé\",\r\n                      \"es-ES\" : \"anuló\",\r\n                      \"ar-AR\" : \"فرغ\"}\r\n      },\r\n      \"waived\" : {\r\n         \"id\" : \"https://w3id.org/xapi/adl/verbs/waived\",\r\n         \"display\" : {\"de-DE\" : \"verzichtet\",\r\n                      \"en-US\" : \"waived\",\r\n                      \"fr-FR\" : \"renoncé\",\r\n                      \"es-ES\" : \"renunciado\",\r\n                      \"ar-AR\" : \"تخلى\"}\r\n      }\r\n   };\r","\r\n  function _getobj(obj, path){\r\n    var parts = path.split('.');\r\n\r\n    var part = parts[0];\r\n    path = parts.slice(1).join('.');\r\n\r\n    if( !obj[part] ){\r\n      if( /\\[\\]$/.test(part) ){\r\n        part = part.slice(0,-2);\r\n        obj[part] = [];\r\n      }\r\n      else\r\n        obj[part] = {};\r\n    }\r\n\r\n    if( !path )\r\n      return obj[part];\r\n    else\r\n      return _getobj(obj[part], path);\r\n  }\r\n\r\n  /*******************************************************************************\r\n   * XAPIStatement - a convenience class to wrap statement objects\r\n   *\r\n   * This sub-API is supposed to make it easier to author valid xAPI statements\r\n   * by adding constructors and encouraging best practices. All objects in this\r\n   * API are fully JSON-compatible, so anything expecting an xAPI statement can\r\n   * take an improved statement and vice versa.\r\n   *\r\n   * A working knowledge of what exactly the LRS expects is still expected,\r\n   * but it's easier to map an 'I did this' statement to xAPI now.\r\n   *\r\n   * Tech note: All constructors also double as shallow clone functions. E.g.\r\n   *\r\n   *   var activity1 = new Activity('A walk in the park');\r\n   *   var activity2 = new Activity(activity1);\r\n   *   var activity3 = new Activity(stmt_from_lrs.object);\r\n   *\r\n   *******************************************************************************/\r\n\r\n  /**\r\n   * A convenient JSON-compatible xAPI statement wrapper\r\n   * All args are optional, but the statement may not be complete or valid\r\n   * Can also pass an Agent IFI, Verb ID, and an Activity ID in lieu of these args\r\n   * @param {string} [actor]   The Agent or Group committing the action described by the statement\r\n   * @param {string} [verb]   The Verb for the action described by the statement\r\n   * @param {string} [object]   The receiver of the action. An Agent, Group, Activity, SubStatement, or StatementRef\r\n   * @example\r\n   * var stmt = new ADL.XAPIStatement(\r\n   *     'mailto:steve.vergenz.ctr@adlnet.gov',\r\n   *    'http://adlnet.gov/expapi/verbs/launched',\r\n   *    'http://vwf.adlnet.gov/xapi/virtual_world_sandbox'\r\n   * );\r\n   * >> {\r\n   * \"actor\": {\r\n   *     \"objectType\": \"Agent\",\r\n   *     \"mbox\": \"mailto:steve.vergenz.ctr@adlnet.gov\" },\r\n   * \"verb\": {\r\n   *     \"id\": \"http://adlnet.gov/expapi/verbs/launched\" },\r\n   * \"object\": {\r\n   *     \"objectType\": \"Activity\",\r\n   *     \"id\": \"http://vwf.adlnet.gov/xapi/virtual_world_sandbox\" },\r\n   * \"result\": {\r\n   *      \"An optional property that represents a measured outcome related to the Statement in which it is included.\"}}\r\n   */\r\n  var XAPIStatement = function(actor, verb, object, result)\r\n  {\r\n\r\n    // initialize\r\n\r\n    // if first arg is an xapi statement, parse\r\n    if( actor && actor.actor && actor.verb && actor.object ){\r\n      var stmt = actor;\r\n      for(var i in stmt){\r\n        if(i != 'actor' && i != 'verb' && i != 'object')\r\n          this[i] = stmt[i];\r\n      }\r\n      actor = stmt.actor;\r\n      verb = stmt.verb;\r\n      object = stmt.object;\r\n    }\r\n\r\n    if(actor){\r\n      if( actor instanceof Agent )\r\n        this.actor = actor;\r\n      else if(actor.objectType === 'Agent' || !actor.objectType)\r\n        this.actor = new Agent(actor);\r\n      else if(actor.objectType === 'Group')\r\n        this.actor = new Group(actor);\r\n    }\r\n    else this.actor = null;\r\n\r\n    if(verb){\r\n      if( verb instanceof Verb )\r\n        this.verb = verb;\r\n      else\r\n        this.verb = new Verb(verb);\r\n    }\r\n    else this.verb = null;\r\n\r\n    // decide what kind of object was passed\r\n    if(object)\r\n    {\r\n      if( object.objectType === 'Activity' || !object.objectType ){\r\n        if( object instanceof Activity )\r\n          this.object = object;\r\n        else\r\n          this.object = new Activity(object);\r\n      }\r\n      else if( object.objectType === 'Agent' ){\r\n        if( object instanceof Agent )\r\n          this.object = object;\r\n        else\r\n          this.object = new Agent(object);\r\n      }\r\n      else if( object.objectType === 'Group' ){\r\n        if( object instanceof Group )\r\n          this.object = object;\r\n        else\r\n          this.object = new Group(object);\r\n      }\r\n      else if( object.objectType === 'StatementRef' ){\r\n        if( object instanceof StatementRef )\r\n          this.object = object;\r\n        else\r\n          this.object = new StatementRef(object);\r\n      }\r\n      else if( object.objectType === 'SubStatement' ){\r\n        if( object instanceof SubStatement )\r\n          this.object = object;\r\n        else\r\n          this.object = new SubStatement(object);\r\n      }\r\n      else this.object = null;\r\n    }\r\n    else this.object = null;\r\n\r\n    // add support for result object\r\n    if(result)\r\n    {\r\n       this.result = result;\r\n    }\r\n\r\n    this.generateId = function(){\r\n      this.id = ADL.ruuid();\r\n    };\r\n  };\r\n\r\n  XAPIStatement.prototype.toString = function(){\r\n    return this.actor.toString() + \" \" + this.verb.toString() + \" \" + this.object.toString() + \" \" + this.result.toString();\r\n  };\r\n\r\n  XAPIStatement.prototype.isValid = function(){\r\n    return this.actor && this.actor.isValid()\r\n      && this.verb && this.verb.isValid()\r\n      && this.object && this.object.isValid()\r\n      && this.result && this.result.isValid();\r\n  };\r\n\r\n  XAPIStatement.prototype.generateRegistration = function(){\r\n    _getobj(this,'context').registration = ADL.ruuid();\r\n  };\r\n\r\n  XAPIStatement.prototype.addParentActivity = function(activity){\r\n    _getobj(this,'context.contextActivities.parent[]').push(new Activity(activity));\r\n  };\r\n\r\n  XAPIStatement.prototype.addGroupingActivity = function(activity){\r\n    _getobj(this,'context.contextActivities.grouping[]').push(new Activity(activity));\r\n  };\r\n\r\n  XAPIStatement.prototype.addOtherContextActivity = function(activity){\r\n    _getobj(this,'context.contextActivities.other[]').push(new Activity(activity));\r\n  };\r\n\r\n\r\n  /**\r\n   * Provides an easy constructor for xAPI agent objects\r\n   * @param {string} identifier   One of the Inverse Functional Identifiers specified in the spec.\r\n   *     That is, an email, a hashed email, an OpenID, or an account object.\r\n   *     See (https://github.com/adlnet/xAPI-Spec/blob/master/xAPI.md#inversefunctional)\r\n   * @param {string} [name]   The natural-language name of the agent\r\n   */\r\n  var Agent = function(identifier, name)\r\n  {\r\n    this.objectType = 'Agent';\r\n    this.name = name;\r\n\r\n    // figure out what type of identifier was given\r\n    if( identifier && (identifier.mbox || identifier.mbox_sha1sum || identifier.openid || identifier.account) ){\r\n      for(var i in identifier){\r\n        this[i] = identifier[i];\r\n      }\r\n    }\r\n    else if( /^mailto:/.test(identifier) ){\r\n      this.mbox = identifier;\r\n    }\r\n    else if( /^[0-9a-f]{40}$/i.test(identifier) ){\r\n      this.mbox_sha1sum = identifier;\r\n    }\r\n    else if( /^http[s]?:/.test(identifier) ){\r\n      this.openid = identifier;\r\n    }\r\n    else if( identifier && identifier.homePage && identifier.name ){\r\n      this.account = identifier;\r\n    }\r\n  };\r\n  Agent.prototype.toString = function(){\r\n    return this.name || this.mbox || this.openid || this.mbox_sha1sum || this.account.name;\r\n  };\r\n  Agent.prototype.isValid = function()\r\n  {\r\n    return this.mbox || this.mbox_sha1sum || this.openid\r\n      || (this.account.homePage && this.account.name)\r\n      || (this.objectType === 'Group' && this.member);\r\n  };\r\n\r\n\r\n  /**\r\n   * A type of agent, can contain multiple agents\r\n   * @param {string} [identifier]   (optional if `members` specified) See Agent.\r\n   * @param {string} [members]    An array of Agents describing the membership of the group\r\n   * @param {string} [name]   The natural-language name of the agent\r\n   */\r\n  var Group = function(identifier, members, name)\r\n  {\r\n    Agent.call(this, identifier, name);\r\n    this.member = members;\r\n    this.objectType = 'Group';\r\n  };\r\n  Group.prototype = new Agent;\r\n\r\n\r\n  /**\r\n   * Really only provides a convenient language map\r\n   * @param {string} id   The IRI of the action taken\r\n   * @param {string} [description]    An English-language description, or a Language Map\r\n   */\r\n  var Verb = function(id, description)\r\n  {\r\n    // if passed a verb object then copy and return\r\n    if( id && id.id ){\r\n      for(var i in id){\r\n        this[i] = id[i];\r\n      }\r\n      return;\r\n    }\r\n\r\n    // save id and build language map\r\n    this.id = id;\r\n    if(description)\r\n    {\r\n      if( typeof(description) === 'string' || description instanceof String ){\r\n        this.display = {'en-US': description};\r\n      }\r\n      else {\r\n        this.display = description;\r\n      }\r\n    }\r\n  };\r\n  Verb.prototype.toString = function(){\r\n    if(this.display && (this.display['en-US'] || this.display['en']))\r\n      return this.display['en-US'] || this.display['en'];\r\n    else\r\n      return this.id;\r\n  };\r\n  Verb.prototype.isValid = function(){\r\n    return this.id;\r\n  };\r\n\r\n\r\n  /**\r\n   * Describes an object that an agent interacts with\r\n   * @param {string} id   The unique activity IRI\r\n   * @param {string} name   An English-language identifier for the activity, or a Language Map\r\n   * @param {string} description   An English-language description of the activity, or a Language Map\r\n   */\r\n  var Activity = function(id, name, description)\r\n  {\r\n    // if first arg is activity, copy everything over\r\n    if(id && id.id){\r\n      var act = id;\r\n      for(var i in act){\r\n        this[i] = act[i];\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.objectType = 'Activity';\r\n    this.id = id;\r\n    if( name || description )\r\n    {\r\n      this.definition = {};\r\n\r\n      if( typeof(name) === 'string' || name instanceof String )\r\n        this.definition.name = {'en-US': name};\r\n      else if(name)\r\n        this.definition.name = name;\r\n\r\n      if( typeof(description) === 'string' || description instanceof String )\r\n        this.definition.description = {'en-US': description};\r\n      else if(description)\r\n        this.definition.description = description;\r\n    }\r\n  };\r\n  Activity.prototype.toString = function(){\r\n    if(this.definition && this.definition.name && (this.definition.name['en-US'] || this.definition.name['en']))\r\n      return this.definition.name['en-US'] || this.definition.name['en'];\r\n    else\r\n      return this.id;\r\n  };\r\n  Activity.prototype.isValid = function(){\r\n    return this.id && (!this.objectType || this.objectType === 'Activity');\r\n  };\r\n\r\n  /**\r\n   * An object that refers to a separate statement\r\n   * @param {string} id   The UUID of another xAPI statement\r\n   */\r\n  var StatementRef = function(id){\r\n    if(id && id.id){\r\n      for(var i in id){\r\n        this[i] = id[i];\r\n      }\r\n    }\r\n    else {\r\n      this.objectType = 'StatementRef';\r\n      this.id = id;\r\n    }\r\n  };\r\n  StatementRef.prototype.toString = function(){\r\n    return 'statement('+this.id+')';\r\n  };\r\n  StatementRef.prototype.isValid = function(){\r\n    return this.id && this.objectType && this.objectType === 'StatementRef';\r\n  };\r\n\r\n  /**\r\n   * A self-contained statement as the object of another statement\r\n   * See XAPIStatement for constructor details\r\n   * @param {string} actor   The Agent or Group committing the action described by the statement\r\n   * @param {string} verb   The Verb for the action described by the statement\r\n   * @param {string} object   The receiver of the action. An Agent, Group, Activity, or StatementRef\r\n   */\r\n  var SubStatement = function(actor, verb, object){\r\n    XAPIStatement.call(this,actor,verb,object);\r\n    this.objectType = 'SubStatement';\r\n\r\n    delete this.id;\r\n    delete this.stored;\r\n    delete this.version;\r\n    delete this.authority;\r\n  };\r\n  SubStatement.prototype = new XAPIStatement;\r\n  SubStatement.prototype.toString = function(){\r\n    return '\"' + SubStatement.prototype.prototype.toString.call(this) + '\"';\r\n  };\r\n\r\n  XAPIStatement.Agent = Agent;\r\n  XAPIStatement.Group = Group;\r\n  XAPIStatement.Verb = Verb;\r\n  XAPIStatement.Activity = Activity;\r\n  XAPIStatement.StatementRef = StatementRef;\r\n  XAPIStatement.SubStatement = SubStatement;\r\n  ADL.XAPIStatement = XAPIStatement;\r\n\r","    var onBrowser = (typeof window !== 'undefined');\r\n\r\n    var getObjDefName = function (o) {\r\n        if (o.definition && o.definition.name) {\r\n            return ADL.xapiutil.getLangVal(o.definition.name);\r\n        }\r\n        return undefined;\r\n    };\r\n\r\n    var getSubStatementDisplay = function (o) {\r\n        if(o.objectType !== \"SubStatement\") return;\r\n        if(o.object.objectType === \"SubStatement\") return;\r\n        if(o.id || o.stored || o.version || o.authority) return;\r\n        var disp =  ADL.xapiutil.getActorId(o.actor) + \":\" + ADL.xapiutil.getVerbDisplay(o.verb) + \":\" + ADL.xapiutil.getObjectId(o.object);\r\n        return disp;\r\n    };\r\n\r\n\r\n    ADL.xapiutil = {};\r\n\r\n    ADL.xapiutil.getLang = function () {\r\n        var lang;\r\n        if (typeof navigator !== 'undefined')\r\n            lang =  navigator.language || navigator.browserLanguage ||\r\n            navigator.systemLanguage || navigator.userLanguage;\r\n        else if (typeof process !== 'undefined' && typeof process.env !== 'undefined' && typeof process.env.LANG !== 'undefined') {\r\n            var str = process.env.LANG;\r\n            lang =  str.slice(0, str.indexOf('.'));\r\n            lang = lang.replace(/_/, '-')\r\n        }\r\n        return lang || \"en-US\";\r\n    };\r\n\r\n    ADL.xapiutil.getLangVal = function (langprop) {\r\n\r\n        if (!langprop) return;\r\n\r\n        var options = Object.keys(langprop);\r\n        // test that langprop is a dict (obj)\r\n        // skips if not a dict(obj) and returns\r\n        if (options.length == 0) return undefined;\r\n\r\n        var lang = ADL.xapiutil.getLang(),\r\n            ret,\r\n            dispGotten = false;\r\n\r\n        do {    //test and retest\r\n            if (langprop[lang])\r\n            {\r\n                ret = langprop[lang];\r\n                dispGotten = true;\r\n            }\r\n            else if (lang.indexOf('-'))\r\n            {\r\n                lang = lang.substring(0, lang.lastIndexOf('-'));\r\n            }\r\n        } while (!dispGotten && lang !==\"\");\r\n\r\n        return ret;\r\n    };\r\n\r\n    ADL.xapiutil.getMoreStatements = function (iterations, callback, searchParams) {\r\n        if (!onBrowser) throw new Error(\"Node not supported.\");\r\n\r\n        var stmts = [];\r\n\r\n        ADL.XAPIWrapper.getStatements(searchParams, null, function getMore(r) {\r\n            if (! (r && r.response) ) return;\r\n            var res = JSON.parse(r.response);\r\n            if (! res.statements) return;\r\n            stmts = stmts.concat(res.statements);\r\n\r\n            if (iterations-- <= 0) {\r\n                callback(stmts);\r\n            }\r\n            else {\r\n                if (res.more && res.more !== \"\")\r\n                {\r\n                    ADL.XAPIWrapper.getStatements(searchParams, res.more, getMore);\r\n                }\r\n                else if (res.more === \"\")\r\n                {\r\n                    callback(stmts);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    ADL.xapiutil.getActorId = function (a) {\r\n        return a.mbox || a.openid || a.mbox_sha1sum || a.account;\r\n    };\r\n\r\n    ADL.xapiutil.getActorIdString = function (a) {\r\n        var id = a.mbox || a.openid || a.mbox_sha1sum;\r\n        if (! id) {\r\n            if (a.account) id = a.account.homePage + \":\" + a.account.name;\r\n            else if (a.member) id = \"Anon Group \" + a.member;\r\n            else id = 'unknown';\r\n        }\r\n        return id;\r\n    };\r\n\r\n    ADL.xapiutil.getActorDisplay = function (a) {\r\n        return a.name || ADL.xapiutil.getActorIdString(a);\r\n    };\r\n\r\n    ADL.xapiutil.getVerbDisplay = function (v) {\r\n        if (!v) return;\r\n        if (v.display) {\r\n            return ADL.xapiutil.getLangVal(v.display) || v.id;\r\n        }\r\n        return v.id;\r\n    };\r\n\r\n    ADL.xapiutil.getObjectType = function (o) {\r\n        return o.objectType || ((o.id) ? \"Activity\" : \"Agent\");\r\n    };\r\n\r\n    ADL.xapiutil.getObjectId = function (o) {\r\n        if (o.id) return o.id;\r\n        var type = ADL.xapiutil.getObjectType(o);\r\n        if (type === \"Agent\" || type === \"Group\") return ADL.xapiutil.getActorId(o);\r\n        return undefined;\r\n    };\r\n\r\n    ADL.xapiutil.getObjectIdString = function (o) {\r\n        if (!o) return 'unknown'\r\n        if (o.id) return o.id;\r\n        var type = ADL.xapiutil.getObjectType(o);\r\n        if (type === \"Agent\" || type === \"Group\") return ADL.xapiutil.getActorIdString(o);\r\n        else if (type == \"SubStatement\") {\r\n            return getSubStatementDisplay(o);\r\n        }\r\n        return 'unknown';\r\n    };\r\n\r\n    ADL.xapiutil.getObjectDisplay = function (o) {\r\n        if (!o) return \"unknown\"\r\n        var disp = getObjDefName(o) || o.name || o.id;\r\n        if (! disp) {\r\n            var type = ADL.xapiutil.getObjectType(o);\r\n            if (type === \"Agent\" || type == \"Group\") disp = ADL.xapiutil.getActorDisplay(o);\r\n            else if (type == \"SubStatement\") {\r\n                disp = getSubStatementDisplay(o);\r\n            }\r\n        }\r\n\r\n        return disp;\r\n    };\r\n\r","function getQueryVariable(variable)\r\n{\r\n    var query = location.search.substring(1);\r\n    var vars = query.split('&');\r\n    for (var i = 0; i < vars.length; i++)\r\n    {\r\n        var pair = vars[i].split('=');\r\n        if (decodeURIComponent(pair[0]) == variable)\r\n        {\r\n            return decodeURIComponent(pair[1]);\r\n        }\r\n    }\r\n    // console.log('Query variable %s not found', variable);\r\n}\r\n\r\nfunction cb_wrap(cb)\r\n{\r\n    return function()\r\n    {\r\n        var args = arguments;\r\n        setTimeout(function()\r\n        {\r\n            var callerArgs = [];\r\n            for (var i = 0; i < args.length; i++)\r\n            {\r\n                callerArgs.push(args[i]);\r\n            }\r\n            cb.apply(window, callerArgs);\r\n        }, 0)\r\n    }\r\n}\r\n//The library will append the necessary launch info to each new A that is linked to the page.\r\n//NOTE: This cannot work if you programmatically change the window location. If you do, you must\r\n//execute the logic in setupCourseLinks to send the initialization data to the new location (if\r\n//you wish that new location to track as part of this session)\r\nfunction observeForNewLinks()\r\n{\r\n    // select the target node\r\n    var target = document.body;\r\n    // create an observer instance\r\n    var observer = new MutationObserver(function(mutations)\r\n    {\r\n        mutations.forEach(function(mutation)\r\n        {\r\n            for (var i in mutation.addedNodes)\r\n            {\r\n                if (mutation.addedNodes.hasOwnProperty(i))\r\n                {\r\n                    if (mutation.addedNodes[i].constructor == HTMLAnchorElement) {\r\n                        var node = mutation.addedNodes[i];\r\n                        setupCourseLinks([node]);\r\n                    }\r\n                }\r\n                \r\n            }\r\n        });\r\n    });\r\n    // configuration of the observer:\r\n    var config = {\r\n        attributes: true,\r\n        childList: true,\r\n        subtree: true\r\n    };\r\n    // pass in the target node, as well as the observer options\r\n    observer.observe(target, config);\r\n    // later, you can stop observing\r\n    ///  observer.disconnect();\r\n}\r\n//This library will init all links in the DOM that include the attribute \"courseLink = true\"\r\n//with the information necessary for the document at that link to track as part of this session.\r\nfunction setupCourseLinks(_nodes)\r\n{\r\n    var launchToken = getQueryVariable(\"xAPILaunchKey\");\r\n    var launchEndpoint = getQueryVariable(\"xAPILaunchService\");\r\n    var encrypted = getQueryVariable(\"encrypted\");\r\n    var query = \"xAPILaunchKey=\" + launchToken + \"&xAPILaunchService=\" + launchEndpoint;\r\n    if (encrypted)\r\n    {\r\n        query += \"&encrypted=true\";\r\n    }\r\n    for(var i = 0; i < _nodes.length; i++)\r\n    {\r\n        var link = _nodes[i];\r\n        var href = link.href;\r\n        var courseLink = link.attributes.getNamedItem('courselink')\r\n        if (courseLink && courseLink.value == \"true\")\r\n        {\r\n            if (href.indexOf(\"?\") > -1)\r\n            {\r\n                href = href + \"&\" + query;\r\n            }\r\n            else\r\n                href = href + \"?\" + query;\r\n            link.href = href;\r\n        }\r\n    };\r\n}\r\n\r\nfunction xAPILaunch(cb, terminate_on_unload, strict_callbacks)\r\n{\r\n    if (isNode) throw ('ADL.launch not supported in node');\r\n    cb = cb_wrap(cb);\r\n    try\r\n    {\r\n        var launchToken = getQueryVariable(\"xAPILaunchKey\");\r\n        var launchEndpoint = getQueryVariable(\"xAPILaunchService\");\r\n        var encrypted = getQueryVariable(\"encrypted\");\r\n        if (encrypted)\r\n        {\r\n            //here, we'd have to implement decryption for the data. This makes little sense in a client side only course\r\n        }\r\n\r\n        xAPILaunch.terminate = function(message)\r\n        {\r\n            var launch = new URL(launchEndpoint);\r\n            launch.pathname += \"launch/\" + launchToken + \"/terminate\";\r\n            var xhr2 = new XMLHttpRequest();\r\n            xhr2.withCredentials = true;\r\n            xhr2.crossDomain = true;\r\n\r\n            xhr2.open('POST', launch.toString(), false);\r\n            xhr2.setRequestHeader(\"Content-type\" , \"application/json\");\r\n            xhr2.send(JSON.stringify({\"code\":0,\"description\": message ||\"User closed content\"}));\r\n\r\n        }\r\n\r\n        if (!launchToken || !launchEndpoint)\r\n            return cb(\"invalid launch parameters\");\r\n        var launch = new URL(launchEndpoint);\r\n        launch.pathname += \"launch/\" + launchToken;\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.withCredentials = true;\r\n        xhr.crossDomain = true;\r\n        xhr.onerror = function(err)\r\n        {\r\n            //exit the try catch so inner execptions in the callback don't trigger this catch\r\n            setTimeout(function()\r\n            {\r\n                return cb(err);\r\n            })\r\n        }\r\n        xhr.onload = function(e)\r\n        {\r\n            if (xhr.status !== 200)\r\n            {\r\n                return xhr.onerror(xhr.responseText);\r\n            }\r\n            var body = JSON.parse(xhr.responseText);\r\n            var launchData = body;\r\n\r\n            var conf = {};\r\n            conf['endpoint'] = launchData.endpoint;\r\n            conf[\"actor\"] = launchData.actor;\r\n            conf.withCredentials = true;\r\n            conf.strictCallbacks = strict_callbacks || false;\r\n\r\n            root.onunload = function()\r\n            {\r\n                if (!terminate_on_unload)\r\n                    return;\r\n                xAPILaunch.terminate(\"User closed content\")\r\n            }\r\n            var wrapper = new ADL.XAPIWrapper.constructor();\r\n            wrapper.changeConfig(conf);\r\n            //Links that include \"courseLink='true'\"\r\n            setupCourseLinks(document.body.querySelectorAll('a'));\r\n            //Also, if links are added dynamically, we will do the same logic for those links.\r\n            observeForNewLinks();\r\n            return cb(null, body, wrapper);\r\n        }\r\n        xhr.open('POST', launch.toString(), true);\r\n        xhr.send();\r\n    }\r\n    catch (e)\r\n    {\r\n        cb(e);\r\n    }\r\n};\r\n\r\nvar isNode = Boolean(!root.document);\r\n\r\n// Node shim for browser location\r\nvar location = isNode ?\r\n    // Node\r\n    {\r\n        search: \"\",\r\n        protocol: \"https:\"\r\n    } :\r\n    // Browser\r\n    root.location;\r\n\r\nADL.launch = xAPILaunch;\r"]}